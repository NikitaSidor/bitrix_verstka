{"version":3,"file":"assets/js/bundle.js","mappings":"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","sources":["webpack://test-500na700/./src/js/modules/messagesManipulation.js","webpack://test-500na700/./src/js/modules/modal.js","webpack://test-500na700/./src/js/modules/faq.js","webpack://test-500na700/./src/js/modules/subscribe.js","webpack://test-500na700/./node_modules/imask/esm/core/utils.js","webpack://test-500na700/./node_modules/imask/esm/core/action-details.js","webpack://test-500na700/./node_modules/imask/esm/core/holder.js","webpack://test-500na700/./node_modules/imask/esm/masked/factory.js","webpack://test-500na700/./node_modules/imask/esm/controls/mask-element.js","webpack://test-500na700/./node_modules/imask/esm/controls/html-mask-element.js","webpack://test-500na700/./node_modules/imask/esm/controls/html-input-mask-element.js","webpack://test-500na700/./node_modules/imask/esm/controls/html-contenteditable-mask-element.js","webpack://test-500na700/./node_modules/imask/esm/controls/input.js","webpack://test-500na700/./node_modules/imask/esm/core/change-details.js","webpack://test-500na700/./node_modules/imask/esm/core/continuous-tail-details.js","webpack://test-500na700/./node_modules/imask/esm/masked/base.js","webpack://test-500na700/./node_modules/imask/esm/masked/pattern/chunk-tail-details.js","webpack://test-500na700/./node_modules/imask/esm/masked/pattern/cursor.js","webpack://test-500na700/./node_modules/imask/esm/masked/pattern/fixed-definition.js","webpack://test-500na700/./node_modules/imask/esm/masked/pattern/input-definition.js","webpack://test-500na700/./node_modules/imask/esm/masked/regexp.js","webpack://test-500na700/./node_modules/imask/esm/masked/pattern.js","webpack://test-500na700/./node_modules/imask/esm/masked/range.js","webpack://test-500na700/./node_modules/imask/esm/masked/date.js","webpack://test-500na700/./node_modules/imask/esm/masked/dynamic.js","webpack://test-500na700/./node_modules/imask/esm/masked/enum.js","webpack://test-500na700/./node_modules/imask/esm/masked/function.js","webpack://test-500na700/./node_modules/imask/esm/masked/number.js","webpack://test-500na700/./node_modules/imask/esm/masked/pipe.js","webpack://test-500na700/./node_modules/imask/esm/index.js","webpack://test-500na700/./src/js/modules/slider.js","webpack://test-500na700/./src/js/index.js","webpack://test-500na700/./src/js/modules/checkboxes.js","webpack://test-500na700/./src/js/modules/projects.js","webpack://test-500na700/./src/js/modules/burger_menu.js","webpack://test-500na700/./src/js/modules/inputMasks.js","webpack://test-500na700/./src/js/modules/news.js"],"sourcesContent":["// сброс таймаутов на исчезновение уведомления об успехе или ошибке\nfunction clearTimeouts(successTimeout, errorTimeout){\n    if (successTimeout) clearTimeout(successTimeout);\n    if (errorTimeout) clearTimeout(errorTimeout);\n}\n\n// показать уведомления об успехе \nexport const showSuccessMessage = (message, successTimeout, errorTimeout) => {\n    // сбросить таймауты перед новым сообщением, если есть\n    clearTimeouts(successTimeout, errorTimeout);\n    // показ сообщения об успехе\n    message.classList.remove(\"message_error\");\n    message.classList.add(\"message_success\");\n    message.innerHTML = 'Данные успешно приняты!';\n\n    // установка таймера, на автоматическое удаление сообщения через 5 сек\n    let success = setTimeout(function() {\n        message.classList.remove(\"message_success\");\n    }, 5000);\n\n    return{\n        successTimeout: success,\n        errorTimeout,\n    }\n}\n\nexport const showErrorMessage = (message, successTimeout, errorTimeout) => {\n    // сбросить таймауты перед новым сообщением, если есть\n    clearTimeouts(successTimeout, errorTimeout);\n    // показ сообщения об ошибке\n    message.classList.remove(\"message_success\");\n    message.classList.add(\"message_error\");\n    message.innerHTML = 'Проверьте правильность введенных данных';\n\n    // установка таймера, на автоматическое удаление сообщения через 5 сек\n    let error = setTimeout(function() {\n        message.classList.remove(\"message_error\");\n    }, 5000);\n\n    return{\n        successTimeout,\n        errorTimeout: error,\n    }\n}","import {showSuccessMessage, showErrorMessage} from './messagesManipulation';\n\n// переменные для очищения таймаутов в файле messagesManipulation.js\nlet successTimeout;\nlet errorTimeout;\n\nfunction modal(){\n    // закрытие модального окна\n    function closeModal() {\n        document.body.style.overflow = 'auto';\n        modal.classList.remove(\"modal_open\");\n    }\n\n    // открытие модального окна\n    const openBtn = document.querySelector('.button_open-modal');\n    const modal = document.querySelector('.modal');\n    openBtn.addEventListener('click', () => {\n        document.body.style.overflow = 'hidden';\n        modal.classList.add(\"modal_open\");\n        \n    });     \n\n    // закрытие модального окна при клике на крест\n    const closeBtn = document.querySelector('.burger_contact-us');\n    closeBtn.addEventListener('click', () => {\n        closeModal();\n    }); \n\n\n    // закрытие модального окна при клике на \"escape\"\n    document.addEventListener('keydown', (e) => {\n        if (e.code === \"Escape\" && modal.classList.contains('modal_open')) { \n            closeModal();\n        }\n    });\n\n    // закрытие модального окна при клике вне его\n    modal.addEventListener('click', (e) => {\n        if (e.target === modal) {\n            closeModal();\n        }\n    });      \n\n    // обработка данных с формы\n    const form = document.querySelector('.contact-us');\n    form.addEventListener('submit', (e) => {\n        e.preventDefault();\n        const phoneInputValue = e.target[1].value;\n\n        const message = document.querySelector('.message_contact-us'); \n\n        if (phoneInputValue.length === 16)\n        {\n            form.reset();\n            const timeouts = showSuccessMessage(message, successTimeout, errorTimeout);\n            successTimeout = timeouts.successTimeout;\n            errorTimeout = timeouts.errorTimeout;\n        } else {\n            const timeouts = showErrorMessage(message, successTimeout, errorTimeout);\n            successTimeout = timeouts.successTimeout;\n            errorTimeout = timeouts.errorTimeout;\n        }\n    }); \n}\n\nexport default modal;","function faq(){\n    const accordionHeader = document.querySelectorAll('.accordion__header');\n    const accordionBody = document.querySelectorAll('.accordion__body');\n    const accordion = document.querySelectorAll('.accordion');\n\n    function openAccordion(index) {\n        if (accordion[index].classList.contains(\"accordion_active\"))\n        {\n            accordion[index].classList.remove(\"accordion_active\");\n            accordionBody[index].style.maxHeight = 0;\n            return;\n        };\n        closeAllAccordions();\n        accordion[index].classList.add(\"accordion_active\");\n        accordionBody[index].style.maxHeight = accordionBody[index].scrollHeight + \"px\";\n    }\n\n    function closeAllAccordions() {\n        accordion.forEach((elem, i) => {\n            accordion[i].classList.remove(\"accordion_active\");\n            accordionBody[i].style.maxHeight = 0;\n        });\n    }\n\n    accordionHeader.forEach((elem, i) => {\n        elem.addEventListener('click', () => openAccordion(i));\n    });\n}\n\nexport default faq;","import {showSuccessMessage, showErrorMessage} from './messagesManipulation';\n\n// переменные для очищения таймаутов в файле messagesManipulation.js\nlet successTimeout;\nlet errorTimeout;\n\nfunction subscribe(){\n    // обработка данных с формы\n    const form = document.querySelector('.subscribe__form');\n    form.addEventListener('submit', (e) => {\n        e.preventDefault();\n        const dateInputValue = e.target[1].value;\n        const phoneInputValue = e.target[2].value;\n        const timeInputValue = e.target[3].value;\n\n        const message = document.querySelector('.message_subscribe'); \n        \n        if (phoneInputValue.length === 16\n            && dateInputValue.length === 10\n            && timeInputValue.length === 5)\n        {\n            form.reset();\n            const timeouts = showSuccessMessage(message, successTimeout, errorTimeout);\n            successTimeout = timeouts.successTimeout;\n            errorTimeout = timeouts.errorTimeout;\n        } else {\n            const timeouts = showErrorMessage(message, successTimeout, errorTimeout);\n            successTimeout = timeouts.successTimeout;\n            errorTimeout = timeouts.errorTimeout;\n        }\n    });\n}\n\nexport default subscribe;","/** Checks if value is string */\nfunction isString(str) {\n  return typeof str === 'string' || str instanceof String;\n}\n\n/** Checks if value is object */\nfunction isObject(obj) {\n  return typeof obj === 'object' && obj != null && obj?.constructor?.name === 'Object';\n}\nfunction pick(obj, keys) {\n  if (Array.isArray(keys)) return pick(obj, (_, k) => keys.includes(k));\n  return Object.entries(obj).reduce((acc, _ref) => {\n    let [k, v] = _ref;\n    if (keys(v, k)) acc[k] = v;\n    return acc;\n  }, {});\n}\n\n/** Direction */\nconst DIRECTION = {\n  NONE: 'NONE',\n  LEFT: 'LEFT',\n  FORCE_LEFT: 'FORCE_LEFT',\n  RIGHT: 'RIGHT',\n  FORCE_RIGHT: 'FORCE_RIGHT'\n};\n\n/** Direction */\n\nfunction forceDirection(direction) {\n  switch (direction) {\n    case DIRECTION.LEFT:\n      return DIRECTION.FORCE_LEFT;\n    case DIRECTION.RIGHT:\n      return DIRECTION.FORCE_RIGHT;\n    default:\n      return direction;\n  }\n}\n\n/** Escapes regular expression control chars */\nfunction escapeRegExp(str) {\n  return str.replace(/([.*+?^=!:${}()|[\\]/\\\\])/g, '\\\\$1');\n}\n\n// cloned from https://github.com/epoberezkin/fast-deep-equal with small changes\nfunction objectIncludes(b, a) {\n  if (a === b) return true;\n  const arrA = Array.isArray(a),\n    arrB = Array.isArray(b);\n  let i;\n  if (arrA && arrB) {\n    if (a.length != b.length) return false;\n    for (i = 0; i < a.length; i++) if (!objectIncludes(a[i], b[i])) return false;\n    return true;\n  }\n  if (arrA != arrB) return false;\n  if (a && b && typeof a === 'object' && typeof b === 'object') {\n    const dateA = a instanceof Date,\n      dateB = b instanceof Date;\n    if (dateA && dateB) return a.getTime() == b.getTime();\n    if (dateA != dateB) return false;\n    const regexpA = a instanceof RegExp,\n      regexpB = b instanceof RegExp;\n    if (regexpA && regexpB) return a.toString() == b.toString();\n    if (regexpA != regexpB) return false;\n    const keys = Object.keys(a);\n    // if (keys.length !== Object.keys(b).length) return false;\n\n    for (i = 0; i < keys.length; i++) if (!Object.prototype.hasOwnProperty.call(b, keys[i])) return false;\n    for (i = 0; i < keys.length; i++) if (!objectIncludes(b[keys[i]], a[keys[i]])) return false;\n    return true;\n  } else if (a && b && typeof a === 'function' && typeof b === 'function') {\n    return a.toString() === b.toString();\n  }\n  return false;\n}\n\n/** Selection range */\n\nexport { DIRECTION, escapeRegExp, forceDirection, isObject, isString, objectIncludes, pick };\n","import { DIRECTION } from './utils.js';\n\n/** Provides details of changing input */\nclass ActionDetails {\n  /** Current input value */\n\n  /** Current cursor position */\n\n  /** Old input value */\n\n  /** Old selection */\n\n  constructor(opts) {\n    Object.assign(this, opts);\n\n    // double check if left part was changed (autofilling, other non-standard input triggers)\n    while (this.value.slice(0, this.startChangePos) !== this.oldValue.slice(0, this.startChangePos)) {\n      --this.oldSelection.start;\n    }\n\n    // double check right part\n    while (this.value.slice(this.cursorPos) !== this.oldValue.slice(this.oldSelection.end)) {\n      if (this.value.length - this.cursorPos < this.oldValue.length - this.oldSelection.end) ++this.oldSelection.end;else ++this.cursorPos;\n    }\n  }\n\n  /** Start changing position */\n  get startChangePos() {\n    return Math.min(this.cursorPos, this.oldSelection.start);\n  }\n\n  /** Inserted symbols count */\n  get insertedCount() {\n    return this.cursorPos - this.startChangePos;\n  }\n\n  /** Inserted symbols */\n  get inserted() {\n    return this.value.substr(this.startChangePos, this.insertedCount);\n  }\n\n  /** Removed symbols count */\n  get removedCount() {\n    // Math.max for opposite operation\n    return Math.max(this.oldSelection.end - this.startChangePos ||\n    // for Delete\n    this.oldValue.length - this.value.length, 0);\n  }\n\n  /** Removed symbols */\n  get removed() {\n    return this.oldValue.substr(this.startChangePos, this.removedCount);\n  }\n\n  /** Unchanged head symbols */\n  get head() {\n    return this.value.substring(0, this.startChangePos);\n  }\n\n  /** Unchanged tail symbols */\n  get tail() {\n    return this.value.substring(this.startChangePos + this.insertedCount);\n  }\n\n  /** Remove direction */\n  get removeDirection() {\n    if (!this.removedCount || this.insertedCount) return DIRECTION.NONE;\n\n    // align right if delete at right\n    return (this.oldSelection.end === this.cursorPos || this.oldSelection.start === this.cursorPos) &&\n    // if not range removed (event with backspace)\n    this.oldSelection.end === this.oldSelection.start ? DIRECTION.RIGHT : DIRECTION.LEFT;\n  }\n}\n\nexport { ActionDetails as default };\n","/** Applies mask on element */\nfunction IMask(el, opts) {\n  // currently available only for input-like elements\n  return new IMask.InputMask(el, opts);\n}\n\nexport { IMask as default };\n","import { isString, isObject, pick } from '../core/utils.js';\nimport IMask from '../core/holder.js';\n\n// TODO can't use overloads here because of https://github.com/microsoft/TypeScript/issues/50754\n// export function maskedClass(mask: string): typeof MaskedPattern;\n// export function maskedClass(mask: DateConstructor): typeof MaskedDate;\n// export function maskedClass(mask: NumberConstructor): typeof MaskedNumber;\n// export function maskedClass(mask: Array<any> | ArrayConstructor): typeof MaskedDynamic;\n// export function maskedClass(mask: MaskedDate): typeof MaskedDate;\n// export function maskedClass(mask: MaskedNumber): typeof MaskedNumber;\n// export function maskedClass(mask: MaskedEnum): typeof MaskedEnum;\n// export function maskedClass(mask: MaskedRange): typeof MaskedRange;\n// export function maskedClass(mask: MaskedRegExp): typeof MaskedRegExp;\n// export function maskedClass(mask: MaskedFunction): typeof MaskedFunction;\n// export function maskedClass(mask: MaskedPattern): typeof MaskedPattern;\n// export function maskedClass(mask: MaskedDynamic): typeof MaskedDynamic;\n// export function maskedClass(mask: Masked): typeof Masked;\n// export function maskedClass(mask: typeof Masked): typeof Masked;\n// export function maskedClass(mask: typeof MaskedDate): typeof MaskedDate;\n// export function maskedClass(mask: typeof MaskedNumber): typeof MaskedNumber;\n// export function maskedClass(mask: typeof MaskedEnum): typeof MaskedEnum;\n// export function maskedClass(mask: typeof MaskedRange): typeof MaskedRange;\n// export function maskedClass(mask: typeof MaskedRegExp): typeof MaskedRegExp;\n// export function maskedClass(mask: typeof MaskedFunction): typeof MaskedFunction;\n// export function maskedClass(mask: typeof MaskedPattern): typeof MaskedPattern;\n// export function maskedClass(mask: typeof MaskedDynamic): typeof MaskedDynamic;\n// export function maskedClass<Mask extends typeof Masked> (mask: Mask): Mask;\n// export function maskedClass(mask: RegExp): typeof MaskedRegExp;\n// export function maskedClass(mask: (value: string, ...args: any[]) => boolean): typeof MaskedFunction;\n\n/** Get Masked class by mask type */\nfunction maskedClass(mask) /* TODO */{\n  if (mask == null) throw new Error('mask property should be defined');\n  if (mask instanceof RegExp) return IMask.MaskedRegExp;\n  if (isString(mask)) return IMask.MaskedPattern;\n  if (mask === Date) return IMask.MaskedDate;\n  if (mask === Number) return IMask.MaskedNumber;\n  if (Array.isArray(mask) || mask === Array) return IMask.MaskedDynamic;\n  if (IMask.Masked && mask.prototype instanceof IMask.Masked) return mask;\n  if (IMask.Masked && mask instanceof IMask.Masked) return mask.constructor;\n  if (mask instanceof Function) return IMask.MaskedFunction;\n  console.warn('Mask not found for mask', mask); // eslint-disable-line no-console\n  return IMask.Masked;\n}\nfunction normalizeOpts(opts) {\n  if (!opts) throw new Error('Options in not defined');\n  if (IMask.Masked) {\n    if (opts.prototype instanceof IMask.Masked) return {\n      mask: opts\n    };\n\n    /*\n      handle cases like:\n      1) opts = Masked\n      2) opts = { mask: Masked, ...instanceOpts }\n    */\n    const {\n      mask = undefined,\n      ...instanceOpts\n    } = opts instanceof IMask.Masked ? {\n      mask: opts\n    } : isObject(opts) && opts.mask instanceof IMask.Masked ? opts : {};\n    if (mask) {\n      const _mask = mask.mask;\n      return {\n        ...pick(mask, (_, k) => !k.startsWith('_')),\n        mask: mask.constructor,\n        _mask,\n        ...instanceOpts\n      };\n    }\n  }\n  if (!isObject(opts)) return {\n    mask: opts\n  };\n  return {\n    ...opts\n  };\n}\n\n// TODO can't use overloads here because of https://github.com/microsoft/TypeScript/issues/50754\n\n// From masked\n// export default function createMask<Opts extends Masked, ReturnMasked=Opts> (opts: Opts): ReturnMasked;\n// // From masked class\n// export default function createMask<Opts extends MaskedOptions<typeof Masked>, ReturnMasked extends Masked=InstanceType<Opts['mask']>> (opts: Opts): ReturnMasked;\n// export default function createMask<Opts extends MaskedOptions<typeof MaskedDate>, ReturnMasked extends MaskedDate=MaskedDate<Opts['parent']>> (opts: Opts): ReturnMasked;\n// export default function createMask<Opts extends MaskedOptions<typeof MaskedNumber>, ReturnMasked extends MaskedNumber=MaskedNumber<Opts['parent']>> (opts: Opts): ReturnMasked;\n// export default function createMask<Opts extends MaskedOptions<typeof MaskedEnum>, ReturnMasked extends MaskedEnum=MaskedEnum<Opts['parent']>> (opts: Opts): ReturnMasked;\n// export default function createMask<Opts extends MaskedOptions<typeof MaskedRange>, ReturnMasked extends MaskedRange=MaskedRange<Opts['parent']>> (opts: Opts): ReturnMasked;\n// export default function createMask<Opts extends MaskedOptions<typeof MaskedRegExp>, ReturnMasked extends MaskedRegExp=MaskedRegExp<Opts['parent']>> (opts: Opts): ReturnMasked;\n// export default function createMask<Opts extends MaskedOptions<typeof MaskedFunction>, ReturnMasked extends MaskedFunction=MaskedFunction<Opts['parent']>> (opts: Opts): ReturnMasked;\n// export default function createMask<Opts extends MaskedOptions<typeof MaskedPattern>, ReturnMasked extends MaskedPattern=MaskedPattern<Opts['parent']>> (opts: Opts): ReturnMasked;\n// export default function createMask<Opts extends MaskedOptions<typeof MaskedDynamic>, ReturnMasked extends MaskedDynamic=MaskedDynamic<Opts['parent']>> (opts: Opts): ReturnMasked;\n// // From mask opts\n// export default function createMask<Opts extends MaskedOptions<Masked>, ReturnMasked=Opts extends MaskedOptions<infer M> ? M : never> (opts: Opts): ReturnMasked;\n// export default function createMask<Opts extends MaskedNumberOptions, ReturnMasked extends MaskedNumber=MaskedNumber<Opts['parent']>> (opts: Opts): ReturnMasked;\n// export default function createMask<Opts extends MaskedDateFactoryOptions, ReturnMasked extends MaskedDate=MaskedDate<Opts['parent']>> (opts: Opts): ReturnMasked;\n// export default function createMask<Opts extends MaskedEnumOptions, ReturnMasked extends MaskedEnum=MaskedEnum<Opts['parent']>> (opts: Opts): ReturnMasked;\n// export default function createMask<Opts extends MaskedRangeOptions, ReturnMasked extends MaskedRange=MaskedRange<Opts['parent']>> (opts: Opts): ReturnMasked;\n// export default function createMask<Opts extends MaskedPatternOptions, ReturnMasked extends MaskedPattern=MaskedPattern<Opts['parent']>> (opts: Opts): ReturnMasked;\n// export default function createMask<Opts extends MaskedDynamicOptions, ReturnMasked extends MaskedDynamic=MaskedDynamic<Opts['parent']>> (opts: Opts): ReturnMasked;\n// export default function createMask<Opts extends MaskedOptions<RegExp>, ReturnMasked extends MaskedRegExp=MaskedRegExp<Opts['parent']>> (opts: Opts): ReturnMasked;\n// export default function createMask<Opts extends MaskedOptions<Function>, ReturnMasked extends MaskedFunction=MaskedFunction<Opts['parent']>> (opts: Opts): ReturnMasked;\n\n/** Creates new {@link Masked} depending on mask type */\nfunction createMask(opts) {\n  if (IMask.Masked && opts instanceof IMask.Masked) return opts;\n  const nOpts = normalizeOpts(opts);\n  const MaskedClass = maskedClass(nOpts.mask);\n  if (!MaskedClass) throw new Error(`Masked class is not found for provided mask ${nOpts.mask}, appropriate module needs to be imported manually before creating mask.`);\n  if (nOpts.mask === MaskedClass) delete nOpts.mask;\n  if (nOpts._mask) {\n    nOpts.mask = nOpts._mask;\n    delete nOpts._mask;\n  }\n  return new MaskedClass(nOpts);\n}\nIMask.createMask = createMask;\n\nexport { createMask as default, maskedClass, normalizeOpts };\n","import IMask from '../core/holder.js';\n\n/**  Generic element API to use with mask */\nclass MaskElement {\n  /** */\n\n  /** */\n\n  /** */\n\n  /** Safely returns selection start */\n  get selectionStart() {\n    let start;\n    try {\n      start = this._unsafeSelectionStart;\n    } catch {}\n    return start != null ? start : this.value.length;\n  }\n\n  /** Safely returns selection end */\n  get selectionEnd() {\n    let end;\n    try {\n      end = this._unsafeSelectionEnd;\n    } catch {}\n    return end != null ? end : this.value.length;\n  }\n\n  /** Safely sets element selection */\n  select(start, end) {\n    if (start == null || end == null || start === this.selectionStart && end === this.selectionEnd) return;\n    try {\n      this._unsafeSelect(start, end);\n    } catch {}\n  }\n\n  /** */\n  get isActive() {\n    return false;\n  }\n  /** */\n\n  /** */\n\n  /** */\n}\nIMask.MaskElement = MaskElement;\n\nexport { MaskElement as default };\n","import MaskElement from './mask-element.js';\nimport IMask from '../core/holder.js';\n\n/** Bridge between HTMLElement and {@link Masked} */\nclass HTMLMaskElement extends MaskElement {\n  /** Mapping between HTMLElement events and mask internal events */\n  static EVENTS_MAP = {\n    selectionChange: 'keydown',\n    input: 'input',\n    drop: 'drop',\n    click: 'click',\n    focus: 'focus',\n    commit: 'blur'\n  };\n  /** HTMLElement to use mask on */\n\n  constructor(input) {\n    super();\n    this.input = input;\n    this._handlers = {};\n  }\n  get rootElement() {\n    return this.input.getRootNode?.() ?? document;\n  }\n\n  /**\n    Is element in focus\n  */\n  get isActive() {\n    return this.input === this.rootElement.activeElement;\n  }\n\n  /**\n    Binds HTMLElement events to mask internal events\n  */\n  bindEvents(handlers) {\n    Object.keys(handlers).forEach(event => this._toggleEventHandler(HTMLMaskElement.EVENTS_MAP[event], handlers[event]));\n  }\n\n  /**\n    Unbinds HTMLElement events to mask internal events\n  */\n  unbindEvents() {\n    Object.keys(this._handlers).forEach(event => this._toggleEventHandler(event));\n  }\n  _toggleEventHandler(event, handler) {\n    if (this._handlers[event]) {\n      this.input.removeEventListener(event, this._handlers[event]);\n      delete this._handlers[event];\n    }\n    if (handler) {\n      this.input.addEventListener(event, handler);\n      this._handlers[event] = handler;\n    }\n  }\n}\nIMask.HTMLMaskElement = HTMLMaskElement;\n\nexport { HTMLMaskElement as default };\n","import HTMLMaskElement from './html-mask-element.js';\nimport IMask from '../core/holder.js';\nimport './mask-element.js';\n\n/** Bridge between InputElement and {@link Masked} */\nclass HTMLInputMaskElement extends HTMLMaskElement {\n  /** InputElement to use mask on */\n\n  constructor(input) {\n    super(input);\n    this.input = input;\n    this._handlers = {};\n  }\n\n  /** Returns InputElement selection start */\n  get _unsafeSelectionStart() {\n    return this.input.selectionStart != null ? this.input.selectionStart : this.value.length;\n  }\n\n  /** Returns InputElement selection end */\n  get _unsafeSelectionEnd() {\n    return this.input.selectionEnd;\n  }\n\n  /** Sets InputElement selection */\n  _unsafeSelect(start, end) {\n    this.input.setSelectionRange(start, end);\n  }\n  get value() {\n    return this.input.value;\n  }\n  set value(value) {\n    this.input.value = value;\n  }\n}\nIMask.HTMLMaskElement = HTMLMaskElement;\n\nexport { HTMLInputMaskElement as default };\n","import HTMLMaskElement from './html-mask-element.js';\nimport IMask from '../core/holder.js';\nimport './mask-element.js';\n\nclass HTMLContenteditableMaskElement extends HTMLMaskElement {\n  /** Returns HTMLElement selection start */\n  get _unsafeSelectionStart() {\n    const root = this.rootElement;\n    const selection = root.getSelection && root.getSelection();\n    const anchorOffset = selection && selection.anchorOffset;\n    const focusOffset = selection && selection.focusOffset;\n    if (focusOffset == null || anchorOffset == null || anchorOffset < focusOffset) {\n      return anchorOffset;\n    }\n    return focusOffset;\n  }\n\n  /** Returns HTMLElement selection end */\n  get _unsafeSelectionEnd() {\n    const root = this.rootElement;\n    const selection = root.getSelection && root.getSelection();\n    const anchorOffset = selection && selection.anchorOffset;\n    const focusOffset = selection && selection.focusOffset;\n    if (focusOffset == null || anchorOffset == null || anchorOffset > focusOffset) {\n      return anchorOffset;\n    }\n    return focusOffset;\n  }\n\n  /** Sets HTMLElement selection */\n  _unsafeSelect(start, end) {\n    if (!this.rootElement.createRange) return;\n    const range = this.rootElement.createRange();\n    range.setStart(this.input.firstChild || this.input, start);\n    range.setEnd(this.input.lastChild || this.input, end);\n    const root = this.rootElement;\n    const selection = root.getSelection && root.getSelection();\n    if (selection) {\n      selection.removeAllRanges();\n      selection.addRange(range);\n    }\n  }\n\n  /** HTMLElement value */\n  get value() {\n    return this.input.textContent || '';\n  }\n  set value(value) {\n    this.input.textContent = value;\n  }\n}\nIMask.HTMLContenteditableMaskElement = HTMLContenteditableMaskElement;\n\nexport { HTMLContenteditableMaskElement as default };\n","import { DIRECTION } from '../core/utils.js';\nimport ActionDetails from '../core/action-details.js';\nimport createMask, { maskedClass } from '../masked/factory.js';\nimport MaskElement from './mask-element.js';\nimport HTMLInputMaskElement from './html-input-mask-element.js';\nimport HTMLContenteditableMaskElement from './html-contenteditable-mask-element.js';\nimport IMask from '../core/holder.js';\nimport './html-mask-element.js';\n\n/** Listens to element events and controls changes between element and {@link Masked} */\nclass InputMask {\n  /**\n    View element\n  */\n\n  /** Internal {@link Masked} model */\n\n  constructor(el, opts) {\n    this.el = el instanceof MaskElement ? el : el.isContentEditable && el.tagName !== 'INPUT' && el.tagName !== 'TEXTAREA' ? new HTMLContenteditableMaskElement(el) : new HTMLInputMaskElement(el);\n    this.masked = createMask(opts);\n    this._listeners = {};\n    this._value = '';\n    this._unmaskedValue = '';\n    this._saveSelection = this._saveSelection.bind(this);\n    this._onInput = this._onInput.bind(this);\n    this._onChange = this._onChange.bind(this);\n    this._onDrop = this._onDrop.bind(this);\n    this._onFocus = this._onFocus.bind(this);\n    this._onClick = this._onClick.bind(this);\n    this.alignCursor = this.alignCursor.bind(this);\n    this.alignCursorFriendly = this.alignCursorFriendly.bind(this);\n    this._bindEvents();\n\n    // refresh\n    this.updateValue();\n    this._onChange();\n  }\n  maskEquals(mask) {\n    return mask == null || this.masked?.maskEquals(mask);\n  }\n\n  /** Masked */\n  get mask() {\n    return this.masked.mask;\n  }\n  set mask(mask) {\n    if (this.maskEquals(mask)) return;\n    if (!(mask instanceof IMask.Masked) && this.masked.constructor === maskedClass(mask)) {\n      // TODO \"any\" no idea\n      this.masked.updateOptions({\n        mask\n      });\n      return;\n    }\n    const masked = mask instanceof IMask.Masked ? mask : createMask({\n      mask\n    });\n    masked.unmaskedValue = this.masked.unmaskedValue;\n    this.masked = masked;\n  }\n\n  /** Raw value */\n  get value() {\n    return this._value;\n  }\n  set value(str) {\n    if (this.value === str) return;\n    this.masked.value = str;\n    this.updateControl();\n    this.alignCursor();\n  }\n\n  /** Unmasked value */\n  get unmaskedValue() {\n    return this._unmaskedValue;\n  }\n  set unmaskedValue(str) {\n    if (this.unmaskedValue === str) return;\n    this.masked.unmaskedValue = str;\n    this.updateControl();\n    this.alignCursor();\n  }\n\n  /** Typed unmasked value */\n  get typedValue() {\n    return this.masked.typedValue;\n  }\n  set typedValue(val) {\n    if (this.masked.typedValueEquals(val)) return;\n    this.masked.typedValue = val;\n    this.updateControl();\n    this.alignCursor();\n  }\n\n  /** Display value */\n  get displayValue() {\n    return this.masked.displayValue;\n  }\n\n  /** Starts listening to element events */\n  _bindEvents() {\n    this.el.bindEvents({\n      selectionChange: this._saveSelection,\n      input: this._onInput,\n      drop: this._onDrop,\n      click: this._onClick,\n      focus: this._onFocus,\n      commit: this._onChange\n    });\n  }\n\n  /** Stops listening to element events */\n  _unbindEvents() {\n    if (this.el) this.el.unbindEvents();\n  }\n\n  /** Fires custom event */\n  _fireEvent(ev, e) {\n    const listeners = this._listeners[ev];\n    if (!listeners) return;\n    listeners.forEach(l => l(e));\n  }\n\n  /** Current selection start */\n  get selectionStart() {\n    return this._cursorChanging ? this._changingCursorPos : this.el.selectionStart;\n  }\n\n  /** Current cursor position */\n  get cursorPos() {\n    return this._cursorChanging ? this._changingCursorPos : this.el.selectionEnd;\n  }\n  set cursorPos(pos) {\n    if (!this.el || !this.el.isActive) return;\n    this.el.select(pos, pos);\n    this._saveSelection();\n  }\n\n  /** Stores current selection */\n  _saveSelection( /* ev */\n  ) {\n    if (this.displayValue !== this.el.value) {\n      console.warn('Element value was changed outside of mask. Syncronize mask using `mask.updateValue()` to work properly.'); // eslint-disable-line no-console\n    }\n    this._selection = {\n      start: this.selectionStart,\n      end: this.cursorPos\n    };\n  }\n\n  /** Syncronizes model value from view */\n  updateValue() {\n    this.masked.value = this.el.value;\n    this._value = this.masked.value;\n  }\n\n  /** Syncronizes view from model value, fires change events */\n  updateControl() {\n    const newUnmaskedValue = this.masked.unmaskedValue;\n    const newValue = this.masked.value;\n    const newDisplayValue = this.displayValue;\n    const isChanged = this.unmaskedValue !== newUnmaskedValue || this.value !== newValue;\n    this._unmaskedValue = newUnmaskedValue;\n    this._value = newValue;\n    if (this.el.value !== newDisplayValue) this.el.value = newDisplayValue;\n    if (isChanged) this._fireChangeEvents();\n  }\n\n  /** Updates options with deep equal check, recreates {@link Masked} model if mask type changes */\n  updateOptions(opts) {\n    const {\n      mask,\n      ...restOpts\n    } = opts;\n    const updateMask = !this.maskEquals(mask);\n    const updateOpts = this.masked.optionsIsChanged(restOpts);\n    if (updateMask) this.mask = mask;\n    if (updateOpts) this.masked.updateOptions(restOpts); // TODO\n\n    if (updateMask || updateOpts) this.updateControl();\n  }\n\n  /** Updates cursor */\n  updateCursor(cursorPos) {\n    if (cursorPos == null) return;\n    this.cursorPos = cursorPos;\n\n    // also queue change cursor for mobile browsers\n    this._delayUpdateCursor(cursorPos);\n  }\n\n  /** Delays cursor update to support mobile browsers */\n  _delayUpdateCursor(cursorPos) {\n    this._abortUpdateCursor();\n    this._changingCursorPos = cursorPos;\n    this._cursorChanging = setTimeout(() => {\n      if (!this.el) return; // if was destroyed\n      this.cursorPos = this._changingCursorPos;\n      this._abortUpdateCursor();\n    }, 10);\n  }\n\n  /** Fires custom events */\n  _fireChangeEvents() {\n    this._fireEvent('accept', this._inputEvent);\n    if (this.masked.isComplete) this._fireEvent('complete', this._inputEvent);\n  }\n\n  /** Aborts delayed cursor update */\n  _abortUpdateCursor() {\n    if (this._cursorChanging) {\n      clearTimeout(this._cursorChanging);\n      delete this._cursorChanging;\n    }\n  }\n\n  /** Aligns cursor to nearest available position */\n  alignCursor() {\n    this.cursorPos = this.masked.nearestInputPos(this.masked.nearestInputPos(this.cursorPos, DIRECTION.LEFT));\n  }\n\n  /** Aligns cursor only if selection is empty */\n  alignCursorFriendly() {\n    if (this.selectionStart !== this.cursorPos) return; // skip if range is selected\n    this.alignCursor();\n  }\n\n  /** Adds listener on custom event */\n  on(ev, handler) {\n    if (!this._listeners[ev]) this._listeners[ev] = [];\n    this._listeners[ev].push(handler);\n    return this;\n  }\n\n  /** Removes custom event listener */\n  off(ev, handler) {\n    if (!this._listeners[ev]) return this;\n    if (!handler) {\n      delete this._listeners[ev];\n      return this;\n    }\n    const hIndex = this._listeners[ev].indexOf(handler);\n    if (hIndex >= 0) this._listeners[ev].splice(hIndex, 1);\n    return this;\n  }\n\n  /** Handles view input event */\n  _onInput(e) {\n    this._inputEvent = e;\n    this._abortUpdateCursor();\n    const details = new ActionDetails({\n      // new state\n      value: this.el.value,\n      cursorPos: this.cursorPos,\n      // old state\n      oldValue: this.displayValue,\n      oldSelection: this._selection\n    });\n    const oldRawValue = this.masked.rawInputValue;\n    const offset = this.masked.splice(details.startChangePos, details.removed.length, details.inserted, details.removeDirection, {\n      input: true,\n      raw: true\n    }).offset;\n\n    // force align in remove direction only if no input chars were removed\n    // otherwise we still need to align with NONE (to get out from fixed symbols for instance)\n    const removeDirection = oldRawValue === this.masked.rawInputValue ? details.removeDirection : DIRECTION.NONE;\n    let cursorPos = this.masked.nearestInputPos(details.startChangePos + offset, removeDirection);\n    if (removeDirection !== DIRECTION.NONE) cursorPos = this.masked.nearestInputPos(cursorPos, DIRECTION.NONE);\n    this.updateControl();\n    this.updateCursor(cursorPos);\n    delete this._inputEvent;\n  }\n\n  /** Handles view change event and commits model value */\n  _onChange() {\n    if (this.displayValue !== this.el.value) {\n      this.updateValue();\n    }\n    this.masked.doCommit();\n    this.updateControl();\n    this._saveSelection();\n  }\n\n  /** Handles view drop event, prevents by default */\n  _onDrop(ev) {\n    ev.preventDefault();\n    ev.stopPropagation();\n  }\n\n  /** Restore last selection on focus */\n  _onFocus(ev) {\n    this.alignCursorFriendly();\n  }\n\n  /** Restore last selection on focus */\n  _onClick(ev) {\n    this.alignCursorFriendly();\n  }\n\n  /** Unbind view events and removes element reference */\n  destroy() {\n    this._unbindEvents();\n    this._listeners.length = 0;\n    delete this.el;\n  }\n}\nIMask.InputMask = InputMask;\n\nexport { InputMask as default };\n","import IMask from './holder.js';\n\n/** Provides details of changing model value */\nclass ChangeDetails {\n  /** Inserted symbols */\n\n  /** Can skip chars */\n\n  /** Additional offset if any changes occurred before tail */\n\n  /** Raw inserted is used by dynamic mask */\n\n  static normalize(prep) {\n    return Array.isArray(prep) ? prep : [prep, new ChangeDetails()];\n  }\n  constructor(details) {\n    Object.assign(this, {\n      inserted: '',\n      rawInserted: '',\n      skip: false,\n      tailShift: 0\n    }, details);\n  }\n\n  /** Aggregate changes */\n  aggregate(details) {\n    this.rawInserted += details.rawInserted;\n    this.skip = this.skip || details.skip;\n    this.inserted += details.inserted;\n    this.tailShift += details.tailShift;\n    return this;\n  }\n\n  /** Total offset considering all changes */\n  get offset() {\n    return this.tailShift + this.inserted.length;\n  }\n}\nIMask.ChangeDetails = ChangeDetails;\n\nexport { ChangeDetails as default };\n","/** Provides details of continuous extracted tail */\nclass ContinuousTailDetails {\n  /** Tail value as string */\n\n  /** Tail start position */\n\n  /** Start position */\n\n  constructor(value, from, stop) {\n    if (value === void 0) {\n      value = '';\n    }\n    if (from === void 0) {\n      from = 0;\n    }\n    this.value = value;\n    this.from = from;\n    this.stop = stop;\n  }\n  toString() {\n    return this.value;\n  }\n  extend(tail) {\n    this.value += String(tail);\n  }\n  appendTo(masked) {\n    return masked.append(this.toString(), {\n      tail: true\n    }).aggregate(masked._appendPlaceholder());\n  }\n  get state() {\n    return {\n      value: this.value,\n      from: this.from,\n      stop: this.stop\n    };\n  }\n  set state(state) {\n    Object.assign(this, state);\n  }\n  unshift(beforePos) {\n    if (!this.value.length || beforePos != null && this.from >= beforePos) return '';\n    const shiftChar = this.value[0];\n    this.value = this.value.slice(1);\n    return shiftChar;\n  }\n  shift() {\n    if (!this.value.length) return '';\n    const shiftChar = this.value[this.value.length - 1];\n    this.value = this.value.slice(0, -1);\n    return shiftChar;\n  }\n}\n\nexport { ContinuousTailDetails as default };\n","import ChangeDetails from '../core/change-details.js';\nimport ContinuousTailDetails from '../core/continuous-tail-details.js';\nimport { isString, DIRECTION, objectIncludes, forceDirection } from '../core/utils.js';\nimport IMask from '../core/holder.js';\n\n/** Append flags */\n\n/** Extract flags */\n\n// see https://github.com/microsoft/TypeScript/issues/6223\n\n/** Provides common masking stuff */\nclass Masked {\n  static DEFAULTS = {\n    skipInvalid: true\n  };\n  static EMPTY_VALUES = [undefined, null, ''];\n\n  /** */\n\n  /** */\n\n  /** Transforms value before mask processing */\n\n  /** Transforms each char before mask processing */\n\n  /** Validates if value is acceptable */\n\n  /** Does additional processing at the end of editing */\n\n  /** Format typed value to string */\n\n  /** Parse string to get typed value */\n\n  /** Enable characters overwriting */\n\n  /** */\n\n  /** */\n\n  /** */\n\n  constructor(opts) {\n    this._value = '';\n    this._update({\n      ...Masked.DEFAULTS,\n      ...opts\n    });\n    this._initialized = true;\n  }\n\n  /** Sets and applies new options */\n  updateOptions(opts) {\n    if (!this.optionsIsChanged(opts)) return;\n    this.withValueRefresh(this._update.bind(this, opts));\n  }\n\n  /** Sets new options */\n  _update(opts) {\n    Object.assign(this, opts);\n  }\n\n  /** Mask state */\n  get state() {\n    return {\n      _value: this.value,\n      _rawInputValue: this.rawInputValue\n    };\n  }\n  set state(state) {\n    this._value = state._value;\n  }\n\n  /** Resets value */\n  reset() {\n    this._value = '';\n  }\n  get value() {\n    return this._value;\n  }\n  set value(value) {\n    this.resolve(value, {\n      input: true\n    });\n  }\n\n  /** Resolve new value */\n  resolve(value, flags) {\n    if (flags === void 0) {\n      flags = {\n        input: true\n      };\n    }\n    this.reset();\n    this.append(value, flags, '');\n    this.doCommit();\n  }\n  get unmaskedValue() {\n    return this.value;\n  }\n  set unmaskedValue(value) {\n    this.resolve(value, {});\n  }\n  get typedValue() {\n    return this.parse ? this.parse(this.value, this) : this.unmaskedValue;\n  }\n  set typedValue(value) {\n    if (this.format) {\n      this.value = this.format(value, this);\n    } else {\n      this.unmaskedValue = String(value);\n    }\n  }\n\n  /** Value that includes raw user input */\n  get rawInputValue() {\n    return this.extractInput(0, this.displayValue.length, {\n      raw: true\n    });\n  }\n  set rawInputValue(value) {\n    this.resolve(value, {\n      raw: true\n    });\n  }\n  get displayValue() {\n    return this.value;\n  }\n  get isComplete() {\n    return true;\n  }\n  get isFilled() {\n    return this.isComplete;\n  }\n\n  /** Finds nearest input position in direction */\n  nearestInputPos(cursorPos, direction) {\n    return cursorPos;\n  }\n  totalInputPositions(fromPos, toPos) {\n    if (fromPos === void 0) {\n      fromPos = 0;\n    }\n    if (toPos === void 0) {\n      toPos = this.displayValue.length;\n    }\n    return Math.min(this.displayValue.length, toPos - fromPos);\n  }\n\n  /** Extracts value in range considering flags */\n  extractInput(fromPos, toPos, flags) {\n    if (fromPos === void 0) {\n      fromPos = 0;\n    }\n    if (toPos === void 0) {\n      toPos = this.displayValue.length;\n    }\n    return this.displayValue.slice(fromPos, toPos);\n  }\n\n  /** Extracts tail in range */\n  extractTail(fromPos, toPos) {\n    if (fromPos === void 0) {\n      fromPos = 0;\n    }\n    if (toPos === void 0) {\n      toPos = this.displayValue.length;\n    }\n    return new ContinuousTailDetails(this.extractInput(fromPos, toPos), fromPos);\n  }\n\n  /** Appends tail */\n  appendTail(tail) {\n    if (isString(tail)) tail = new ContinuousTailDetails(String(tail));\n    return tail.appendTo(this);\n  }\n\n  /** Appends char */\n  _appendCharRaw(ch, flags) {\n    if (!ch) return new ChangeDetails();\n    this._value += ch;\n    return new ChangeDetails({\n      inserted: ch,\n      rawInserted: ch\n    });\n  }\n\n  /** Appends char */\n  _appendChar(ch, flags, checkTail) {\n    if (flags === void 0) {\n      flags = {};\n    }\n    const consistentState = this.state;\n    let details;\n    [ch, details] = this.doPrepareChar(ch, flags);\n    if (ch) details = details.aggregate(this._appendCharRaw(ch, flags));\n    if (details.inserted) {\n      let consistentTail;\n      let appended = this.doValidate(flags) !== false;\n      if (appended && checkTail != null) {\n        // validation ok, check tail\n        const beforeTailState = this.state;\n        if (this.overwrite === true) {\n          consistentTail = checkTail.state;\n          checkTail.unshift(this.displayValue.length - details.tailShift);\n        }\n        let tailDetails = this.appendTail(checkTail);\n        appended = tailDetails.rawInserted === checkTail.toString();\n\n        // not ok, try shift\n        if (!(appended && tailDetails.inserted) && this.overwrite === 'shift') {\n          this.state = beforeTailState;\n          consistentTail = checkTail.state;\n          checkTail.shift();\n          tailDetails = this.appendTail(checkTail);\n          appended = tailDetails.rawInserted === checkTail.toString();\n        }\n\n        // if ok, rollback state after tail\n        if (appended && tailDetails.inserted) this.state = beforeTailState;\n      }\n\n      // revert all if something went wrong\n      if (!appended) {\n        details = new ChangeDetails();\n        this.state = consistentState;\n        if (checkTail && consistentTail) checkTail.state = consistentTail;\n      }\n    }\n    return details;\n  }\n\n  /** Appends optional placeholder at the end */\n  _appendPlaceholder() {\n    return new ChangeDetails();\n  }\n\n  /** Appends optional eager placeholder at the end */\n  _appendEager() {\n    return new ChangeDetails();\n  }\n\n  /** Appends symbols considering flags */\n  append(str, flags, tail) {\n    if (!isString(str)) throw new Error('value should be string');\n    const checkTail = isString(tail) ? new ContinuousTailDetails(String(tail)) : tail;\n    if (flags?.tail) flags._beforeTailState = this.state;\n    let details;\n    [str, details] = this.doPrepare(str, flags);\n    for (let ci = 0; ci < str.length; ++ci) {\n      const d = this._appendChar(str[ci], flags, checkTail);\n      if (!d.rawInserted && !this.doSkipInvalid(str[ci], flags, checkTail)) break;\n      details.aggregate(d);\n    }\n    if ((this.eager === true || this.eager === 'append') && flags?.input && str) {\n      details.aggregate(this._appendEager());\n    }\n\n    // append tail but aggregate only tailShift\n    if (checkTail != null) {\n      details.tailShift += this.appendTail(checkTail).tailShift;\n      // TODO it's a good idea to clear state after appending ends\n      // but it causes bugs when one append calls another (when dynamic dispatch set rawInputValue)\n      // this._resetBeforeTailState();\n    }\n    return details;\n  }\n  remove(fromPos, toPos) {\n    if (fromPos === void 0) {\n      fromPos = 0;\n    }\n    if (toPos === void 0) {\n      toPos = this.displayValue.length;\n    }\n    this._value = this.displayValue.slice(0, fromPos) + this.displayValue.slice(toPos);\n    return new ChangeDetails();\n  }\n\n  /** Calls function and reapplies current value */\n  withValueRefresh(fn) {\n    if (this._refreshing || !this._initialized) return fn();\n    this._refreshing = true;\n    const rawInput = this.rawInputValue;\n    const value = this.value;\n    const ret = fn();\n    this.rawInputValue = rawInput;\n    // append lost trailing chars at the end\n    if (this.value && this.value !== value && value.indexOf(this.value) === 0) {\n      this.append(value.slice(this.displayValue.length), {}, '');\n    }\n    delete this._refreshing;\n    return ret;\n  }\n  runIsolated(fn) {\n    if (this._isolated || !this._initialized) return fn(this);\n    this._isolated = true;\n    const state = this.state;\n    const ret = fn(this);\n    this.state = state;\n    delete this._isolated;\n    return ret;\n  }\n  doSkipInvalid(ch, flags, checkTail) {\n    return Boolean(this.skipInvalid);\n  }\n\n  /** Prepares string before mask processing */\n  doPrepare(str, flags) {\n    if (flags === void 0) {\n      flags = {};\n    }\n    return ChangeDetails.normalize(this.prepare ? this.prepare(str, this, flags) : str);\n  }\n\n  /** Prepares each char before mask processing */\n  doPrepareChar(str, flags) {\n    if (flags === void 0) {\n      flags = {};\n    }\n    return ChangeDetails.normalize(this.prepareChar ? this.prepareChar(str, this, flags) : str);\n  }\n\n  /** Validates if value is acceptable */\n  doValidate(flags) {\n    return (!this.validate || this.validate(this.value, this, flags)) && (!this.parent || this.parent.doValidate(flags));\n  }\n\n  /** Does additional processing at the end of editing */\n  doCommit() {\n    if (this.commit) this.commit(this.value, this);\n  }\n  splice(start, deleteCount, inserted, removeDirection, flags) {\n    if (removeDirection === void 0) {\n      removeDirection = DIRECTION.NONE;\n    }\n    if (flags === void 0) {\n      flags = {\n        input: true\n      };\n    }\n    const tailPos = start + deleteCount;\n    const tail = this.extractTail(tailPos);\n    const eagerRemove = this.eager === true || this.eager === 'remove';\n    let oldRawValue;\n    if (eagerRemove) {\n      removeDirection = forceDirection(removeDirection);\n      oldRawValue = this.extractInput(0, tailPos, {\n        raw: true\n      });\n    }\n    let startChangePos = start;\n    const details = new ChangeDetails();\n\n    // if it is just deletion without insertion\n    if (removeDirection !== DIRECTION.NONE) {\n      startChangePos = this.nearestInputPos(start, deleteCount > 1 && start !== 0 && !eagerRemove ? DIRECTION.NONE : removeDirection);\n\n      // adjust tailShift if start was aligned\n      details.tailShift = startChangePos - start;\n    }\n    details.aggregate(this.remove(startChangePos));\n    if (eagerRemove && removeDirection !== DIRECTION.NONE && oldRawValue === this.rawInputValue) {\n      if (removeDirection === DIRECTION.FORCE_LEFT) {\n        let valLength;\n        while (oldRawValue === this.rawInputValue && (valLength = this.displayValue.length)) {\n          details.aggregate(new ChangeDetails({\n            tailShift: -1\n          })).aggregate(this.remove(valLength - 1));\n        }\n      } else if (removeDirection === DIRECTION.FORCE_RIGHT) {\n        tail.unshift();\n      }\n    }\n    return details.aggregate(this.append(inserted, flags, tail));\n  }\n  maskEquals(mask) {\n    return this.mask === mask;\n  }\n  optionsIsChanged(opts) {\n    return !objectIncludes(this, opts);\n  }\n  typedValueEquals(value) {\n    const tval = this.typedValue;\n    return value === tval || Masked.EMPTY_VALUES.includes(value) && Masked.EMPTY_VALUES.includes(tval) || (this.format ? this.format(value, this) === this.format(this.typedValue, this) : false);\n  }\n}\nIMask.Masked = Masked;\n\nexport { Masked as default };\n","import ChangeDetails from '../../core/change-details.js';\nimport { isString } from '../../core/utils.js';\nimport ContinuousTailDetails from '../../core/continuous-tail-details.js';\nimport IMask from '../../core/holder.js';\n\nclass ChunksTailDetails {\n  /** */\n\n  constructor(chunks, from) {\n    if (chunks === void 0) {\n      chunks = [];\n    }\n    if (from === void 0) {\n      from = 0;\n    }\n    this.chunks = chunks;\n    this.from = from;\n  }\n  toString() {\n    return this.chunks.map(String).join('');\n  }\n  extend(tailChunk) {\n    if (!String(tailChunk)) return;\n    tailChunk = isString(tailChunk) ? new ContinuousTailDetails(String(tailChunk)) : tailChunk;\n    const lastChunk = this.chunks[this.chunks.length - 1];\n    const extendLast = lastChunk && (\n    // if stops are same or tail has no stop\n    lastChunk.stop === tailChunk.stop || tailChunk.stop == null) &&\n    // if tail chunk goes just after last chunk\n    tailChunk.from === lastChunk.from + lastChunk.toString().length;\n    if (tailChunk instanceof ContinuousTailDetails) {\n      // check the ability to extend previous chunk\n      if (extendLast) {\n        // extend previous chunk\n        lastChunk.extend(tailChunk.toString());\n      } else {\n        // append new chunk\n        this.chunks.push(tailChunk);\n      }\n    } else if (tailChunk instanceof ChunksTailDetails) {\n      if (tailChunk.stop == null) {\n        // unwrap floating chunks to parent, keeping `from` pos\n        let firstTailChunk;\n        while (tailChunk.chunks.length && tailChunk.chunks[0].stop == null) {\n          firstTailChunk = tailChunk.chunks.shift(); // not possible to be `undefined` because length was checked above\n          firstTailChunk.from += tailChunk.from;\n          this.extend(firstTailChunk);\n        }\n      }\n\n      // if tail chunk still has value\n      if (tailChunk.toString()) {\n        // if chunks contains stops, then popup stop to container\n        tailChunk.stop = tailChunk.blockIndex;\n        this.chunks.push(tailChunk);\n      }\n    }\n  }\n  appendTo(masked) {\n    if (!(masked instanceof IMask.MaskedPattern)) {\n      const tail = new ContinuousTailDetails(this.toString());\n      return tail.appendTo(masked);\n    }\n    const details = new ChangeDetails();\n    for (let ci = 0; ci < this.chunks.length && !details.skip; ++ci) {\n      const chunk = this.chunks[ci];\n      const lastBlockIter = masked._mapPosToBlock(masked.displayValue.length);\n      const stop = chunk.stop;\n      let chunkBlock;\n      if (stop != null && (\n      // if block not found or stop is behind lastBlock\n      !lastBlockIter || lastBlockIter.index <= stop)) {\n        if (chunk instanceof ChunksTailDetails ||\n        // for continuous block also check if stop is exist\n        masked._stops.indexOf(stop) >= 0) {\n          const phDetails = masked._appendPlaceholder(stop);\n          details.aggregate(phDetails);\n        }\n        chunkBlock = chunk instanceof ChunksTailDetails && masked._blocks[stop];\n      }\n      if (chunkBlock) {\n        const tailDetails = chunkBlock.appendTail(chunk);\n        tailDetails.skip = false; // always ignore skip, it will be set on last\n        details.aggregate(tailDetails);\n        masked._value += tailDetails.inserted;\n\n        // get not inserted chars\n        const remainChars = chunk.toString().slice(tailDetails.rawInserted.length);\n        if (remainChars) details.aggregate(masked.append(remainChars, {\n          tail: true\n        }));\n      } else {\n        details.aggregate(masked.append(chunk.toString(), {\n          tail: true\n        }));\n      }\n    }\n    return details;\n  }\n  get state() {\n    return {\n      chunks: this.chunks.map(c => c.state),\n      from: this.from,\n      stop: this.stop,\n      blockIndex: this.blockIndex\n    };\n  }\n  set state(state) {\n    const {\n      chunks,\n      ...props\n    } = state;\n    Object.assign(this, props);\n    this.chunks = chunks.map(cstate => {\n      const chunk = \"chunks\" in cstate ? new ChunksTailDetails() : new ContinuousTailDetails();\n      chunk.state = cstate;\n      return chunk;\n    });\n  }\n  unshift(beforePos) {\n    if (!this.chunks.length || beforePos != null && this.from >= beforePos) return '';\n    const chunkShiftPos = beforePos != null ? beforePos - this.from : beforePos;\n    let ci = 0;\n    while (ci < this.chunks.length) {\n      const chunk = this.chunks[ci];\n      const shiftChar = chunk.unshift(chunkShiftPos);\n      if (chunk.toString()) {\n        // chunk still contains value\n        // but not shifted - means no more available chars to shift\n        if (!shiftChar) break;\n        ++ci;\n      } else {\n        // clean if chunk has no value\n        this.chunks.splice(ci, 1);\n      }\n      if (shiftChar) return shiftChar;\n    }\n    return '';\n  }\n  shift() {\n    if (!this.chunks.length) return '';\n    let ci = this.chunks.length - 1;\n    while (0 <= ci) {\n      const chunk = this.chunks[ci];\n      const shiftChar = chunk.shift();\n      if (chunk.toString()) {\n        // chunk still contains value\n        // but not shifted - means no more available chars to shift\n        if (!shiftChar) break;\n        --ci;\n      } else {\n        // clean if chunk has no value\n        this.chunks.splice(ci, 1);\n      }\n      if (shiftChar) return shiftChar;\n    }\n    return '';\n  }\n}\n\nexport { ChunksTailDetails as default };\n","import { DIRECTION } from '../../core/utils.js';\n\nclass PatternCursor {\n  constructor(masked, pos) {\n    this.masked = masked;\n    this._log = [];\n    const {\n      offset,\n      index\n    } = masked._mapPosToBlock(pos) || (pos < 0 ?\n    // first\n    {\n      index: 0,\n      offset: 0\n    } :\n    // last\n    {\n      index: this.masked._blocks.length,\n      offset: 0\n    });\n    this.offset = offset;\n    this.index = index;\n    this.ok = false;\n  }\n  get block() {\n    return this.masked._blocks[this.index];\n  }\n  get pos() {\n    return this.masked._blockStartPos(this.index) + this.offset;\n  }\n  get state() {\n    return {\n      index: this.index,\n      offset: this.offset,\n      ok: this.ok\n    };\n  }\n  set state(s) {\n    Object.assign(this, s);\n  }\n  pushState() {\n    this._log.push(this.state);\n  }\n  popState() {\n    const s = this._log.pop();\n    if (s) this.state = s;\n    return s;\n  }\n  bindBlock() {\n    if (this.block) return;\n    if (this.index < 0) {\n      this.index = 0;\n      this.offset = 0;\n    }\n    if (this.index >= this.masked._blocks.length) {\n      this.index = this.masked._blocks.length - 1;\n      this.offset = this.block.displayValue.length; // TODO this is stupid type error, `block` depends on index that was changed above\n    }\n  }\n  _pushLeft(fn) {\n    this.pushState();\n    for (this.bindBlock(); 0 <= this.index; --this.index, this.offset = this.block?.displayValue.length || 0) {\n      if (fn()) return this.ok = true;\n    }\n    return this.ok = false;\n  }\n  _pushRight(fn) {\n    this.pushState();\n    for (this.bindBlock(); this.index < this.masked._blocks.length; ++this.index, this.offset = 0) {\n      if (fn()) return this.ok = true;\n    }\n    return this.ok = false;\n  }\n  pushLeftBeforeFilled() {\n    return this._pushLeft(() => {\n      if (this.block.isFixed || !this.block.value) return;\n      this.offset = this.block.nearestInputPos(this.offset, DIRECTION.FORCE_LEFT);\n      if (this.offset !== 0) return true;\n    });\n  }\n  pushLeftBeforeInput() {\n    // cases:\n    // filled input: 00|\n    // optional empty input: 00[]|\n    // nested block: XX<[]>|\n    return this._pushLeft(() => {\n      if (this.block.isFixed) return;\n      this.offset = this.block.nearestInputPos(this.offset, DIRECTION.LEFT);\n      return true;\n    });\n  }\n  pushLeftBeforeRequired() {\n    return this._pushLeft(() => {\n      if (this.block.isFixed || this.block.isOptional && !this.block.value) return;\n      this.offset = this.block.nearestInputPos(this.offset, DIRECTION.LEFT);\n      return true;\n    });\n  }\n  pushRightBeforeFilled() {\n    return this._pushRight(() => {\n      if (this.block.isFixed || !this.block.value) return;\n      this.offset = this.block.nearestInputPos(this.offset, DIRECTION.FORCE_RIGHT);\n      if (this.offset !== this.block.value.length) return true;\n    });\n  }\n  pushRightBeforeInput() {\n    return this._pushRight(() => {\n      if (this.block.isFixed) return;\n\n      // const o = this.offset;\n      this.offset = this.block.nearestInputPos(this.offset, DIRECTION.NONE);\n      // HACK cases like (STILL DOES NOT WORK FOR NESTED)\n      // aa|X\n      // aa<X|[]>X_    - this will not work\n      // if (o && o === this.offset && this.block instanceof PatternInputDefinition) continue;\n      return true;\n    });\n  }\n  pushRightBeforeRequired() {\n    return this._pushRight(() => {\n      if (this.block.isFixed || this.block.isOptional && !this.block.value) return;\n\n      // TODO check |[*]XX_\n      this.offset = this.block.nearestInputPos(this.offset, DIRECTION.NONE);\n      return true;\n    });\n  }\n}\n\nexport { PatternCursor as default };\n","import ChangeDetails from '../../core/change-details.js';\nimport { DIRECTION, isString } from '../../core/utils.js';\nimport ContinuousTailDetails from '../../core/continuous-tail-details.js';\nimport '../../core/holder.js';\n\nclass PatternFixedDefinition {\n  /** */\n\n  /** */\n\n  /** */\n\n  /** */\n\n  /** */\n\n  /** */\n\n  constructor(opts) {\n    Object.assign(this, opts);\n    this._value = '';\n    this.isFixed = true;\n  }\n  get value() {\n    return this._value;\n  }\n  get unmaskedValue() {\n    return this.isUnmasking ? this.value : '';\n  }\n  get rawInputValue() {\n    return this._isRawInput ? this.value : '';\n  }\n  get displayValue() {\n    return this.value;\n  }\n  reset() {\n    this._isRawInput = false;\n    this._value = '';\n  }\n  remove(fromPos, toPos) {\n    if (fromPos === void 0) {\n      fromPos = 0;\n    }\n    if (toPos === void 0) {\n      toPos = this._value.length;\n    }\n    this._value = this._value.slice(0, fromPos) + this._value.slice(toPos);\n    if (!this._value) this._isRawInput = false;\n    return new ChangeDetails();\n  }\n  nearestInputPos(cursorPos, direction) {\n    if (direction === void 0) {\n      direction = DIRECTION.NONE;\n    }\n    const minPos = 0;\n    const maxPos = this._value.length;\n    switch (direction) {\n      case DIRECTION.LEFT:\n      case DIRECTION.FORCE_LEFT:\n        return minPos;\n      case DIRECTION.NONE:\n      case DIRECTION.RIGHT:\n      case DIRECTION.FORCE_RIGHT:\n      default:\n        return maxPos;\n    }\n  }\n  totalInputPositions(fromPos, toPos) {\n    if (fromPos === void 0) {\n      fromPos = 0;\n    }\n    if (toPos === void 0) {\n      toPos = this._value.length;\n    }\n    return this._isRawInput ? toPos - fromPos : 0;\n  }\n  extractInput(fromPos, toPos, flags) {\n    if (fromPos === void 0) {\n      fromPos = 0;\n    }\n    if (toPos === void 0) {\n      toPos = this._value.length;\n    }\n    if (flags === void 0) {\n      flags = {};\n    }\n    return flags.raw && this._isRawInput && this._value.slice(fromPos, toPos) || '';\n  }\n  get isComplete() {\n    return true;\n  }\n  get isFilled() {\n    return Boolean(this._value);\n  }\n  _appendChar(ch, flags) {\n    if (flags === void 0) {\n      flags = {};\n    }\n    const details = new ChangeDetails();\n    if (this.isFilled) return details;\n    const appendEager = this.eager === true || this.eager === 'append';\n    const appended = this.char === ch;\n    const isResolved = appended && (this.isUnmasking || flags.input || flags.raw) && (!flags.raw || !appendEager) && !flags.tail;\n    if (isResolved) details.rawInserted = this.char;\n    this._value = details.inserted = this.char;\n    this._isRawInput = isResolved && (flags.raw || flags.input);\n    return details;\n  }\n  _appendEager() {\n    return this._appendChar(this.char, {\n      tail: true\n    });\n  }\n  _appendPlaceholder() {\n    const details = new ChangeDetails();\n    if (this.isFilled) return details;\n    this._value = details.inserted = this.char;\n    return details;\n  }\n  extractTail() {\n    return new ContinuousTailDetails('');\n  }\n  appendTail(tail) {\n    if (isString(tail)) tail = new ContinuousTailDetails(String(tail));\n    return tail.appendTo(this);\n  }\n  append(str, flags, tail) {\n    const details = this._appendChar(str[0], flags);\n    if (tail != null) {\n      details.tailShift += this.appendTail(tail).tailShift;\n    }\n    return details;\n  }\n  doCommit() {}\n  get state() {\n    return {\n      _value: this._value,\n      _rawInputValue: this.rawInputValue\n    };\n  }\n  set state(state) {\n    this._value = state._value;\n    this._isRawInput = Boolean(state._rawInputValue);\n  }\n}\n\nexport { PatternFixedDefinition as default };\n","import createMask from '../factory.js';\nimport ChangeDetails from '../../core/change-details.js';\nimport { DIRECTION } from '../../core/utils.js';\nimport '../../core/holder.js';\n\nclass PatternInputDefinition {\n  static DEFAULT_DEFINITIONS = {\n    '0': /\\d/,\n    'a': /[\\u0041-\\u005A\\u0061-\\u007A\\u00AA\\u00B5\\u00BA\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0370-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u048A-\\u0527\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0620-\\u064A\\u066E\\u066F\\u0671-\\u06D3\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07CA-\\u07EA\\u07F4\\u07F5\\u07FA\\u0800-\\u0815\\u081A\\u0824\\u0828\\u0840-\\u0858\\u08A0\\u08A2-\\u08AC\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0971-\\u0977\\u0979-\\u097F\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC\\u09DD\\u09DF-\\u09E1\\u09F0\\u09F1\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0\\u0AE1\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B71\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C33\\u0C35-\\u0C39\\u0C3D\\u0C58\\u0C59\\u0C60\\u0C61\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD\\u0CDE\\u0CE0\\u0CE1\\u0CF1\\u0CF2\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D\\u0D4E\\u0D60\\u0D61\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E46\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EDC-\\u0EDF\\u0F00\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8C\\u1000-\\u102A\\u103F\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065\\u1066\\u106E-\\u1070\\u1075-\\u1081\\u108E\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1380-\\u138F\\u13A0-\\u13F4\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u1700-\\u170C\\u170E-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17D7\\u17DC\\u1820-\\u1877\\u1880-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191C\\u1950-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19C1-\\u19C7\\u1A00-\\u1A16\\u1A20-\\u1A54\\u1AA7\\u1B05-\\u1B33\\u1B45-\\u1B4B\\u1B83-\\u1BA0\\u1BAE\\u1BAF\\u1BBA-\\u1BE5\\u1C00-\\u1C23\\u1C4D-\\u1C4F\\u1C5A-\\u1C7D\\u1CE9-\\u1CEC\\u1CEE-\\u1CF1\\u1CF5\\u1CF6\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2071\\u207F\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2183\\u2184\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2E2F\\u3005\\u3006\\u3031-\\u3035\\u303B\\u303C\\u3041-\\u3096\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312D\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FCC\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA61F\\uA62A\\uA62B\\uA640-\\uA66E\\uA67F-\\uA697\\uA6A0-\\uA6E5\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA78E\\uA790-\\uA793\\uA7A0-\\uA7AA\\uA7F8-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA822\\uA840-\\uA873\\uA882-\\uA8B3\\uA8F2-\\uA8F7\\uA8FB\\uA90A-\\uA925\\uA930-\\uA946\\uA960-\\uA97C\\uA984-\\uA9B2\\uA9CF\\uAA00-\\uAA28\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA60-\\uAA76\\uAA7A\\uAA80-\\uAAAF\\uAAB1\\uAAB5\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEA\\uAAF2-\\uAAF4\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uABC0-\\uABE2\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]/,\n    // http://stackoverflow.com/a/22075070\n    '*': /./\n  };\n\n  /** */\n\n  /** */\n\n  /** */\n\n  /** */\n\n  /** */\n\n  /** */\n\n  /** */\n\n  /** */\n\n  constructor(opts) {\n    const {\n      parent,\n      isOptional,\n      placeholderChar,\n      displayChar,\n      lazy,\n      eager,\n      ...maskOpts\n    } = opts;\n    this.masked = createMask(maskOpts);\n    Object.assign(this, {\n      parent,\n      isOptional,\n      placeholderChar,\n      displayChar,\n      lazy,\n      eager\n    });\n  }\n  reset() {\n    this.isFilled = false;\n    this.masked.reset();\n  }\n  remove(fromPos, toPos) {\n    if (fromPos === void 0) {\n      fromPos = 0;\n    }\n    if (toPos === void 0) {\n      toPos = this.value.length;\n    }\n    if (fromPos === 0 && toPos >= 1) {\n      this.isFilled = false;\n      return this.masked.remove(fromPos, toPos);\n    }\n    return new ChangeDetails();\n  }\n  get value() {\n    return this.masked.value || (this.isFilled && !this.isOptional ? this.placeholderChar : '');\n  }\n  get unmaskedValue() {\n    return this.masked.unmaskedValue;\n  }\n  get rawInputValue() {\n    return this.masked.rawInputValue;\n  }\n  get displayValue() {\n    return this.masked.value && this.displayChar || this.value;\n  }\n  get isComplete() {\n    return Boolean(this.masked.value) || this.isOptional;\n  }\n  _appendChar(ch, flags) {\n    if (flags === void 0) {\n      flags = {};\n    }\n    if (this.isFilled) return new ChangeDetails();\n    const state = this.masked.state;\n    // simulate input\n    const details = this.masked._appendChar(ch, this.currentMaskFlags(flags));\n    if (details.inserted && this.doValidate(flags) === false) {\n      details.inserted = details.rawInserted = '';\n      this.masked.state = state;\n    }\n    if (!details.inserted && !this.isOptional && !this.lazy && !flags.input) {\n      details.inserted = this.placeholderChar;\n    }\n    details.skip = !details.inserted && !this.isOptional;\n    this.isFilled = Boolean(details.inserted);\n    return details;\n  }\n  append(str, flags, tail) {\n    // TODO probably should be done via _appendChar\n    return this.masked.append(str, this.currentMaskFlags(flags), tail);\n  }\n  _appendPlaceholder() {\n    const details = new ChangeDetails();\n    if (this.isFilled || this.isOptional) return details;\n    this.isFilled = true;\n    details.inserted = this.placeholderChar;\n    return details;\n  }\n  _appendEager() {\n    return new ChangeDetails();\n  }\n  extractTail(fromPos, toPos) {\n    return this.masked.extractTail(fromPos, toPos);\n  }\n  appendTail(tail) {\n    return this.masked.appendTail(tail);\n  }\n  extractInput(fromPos, toPos, flags) {\n    if (fromPos === void 0) {\n      fromPos = 0;\n    }\n    if (toPos === void 0) {\n      toPos = this.value.length;\n    }\n    return this.masked.extractInput(fromPos, toPos, flags);\n  }\n  nearestInputPos(cursorPos, direction) {\n    if (direction === void 0) {\n      direction = DIRECTION.NONE;\n    }\n    const minPos = 0;\n    const maxPos = this.value.length;\n    const boundPos = Math.min(Math.max(cursorPos, minPos), maxPos);\n    switch (direction) {\n      case DIRECTION.LEFT:\n      case DIRECTION.FORCE_LEFT:\n        return this.isComplete ? boundPos : minPos;\n      case DIRECTION.RIGHT:\n      case DIRECTION.FORCE_RIGHT:\n        return this.isComplete ? boundPos : maxPos;\n      case DIRECTION.NONE:\n      default:\n        return boundPos;\n    }\n  }\n  totalInputPositions(fromPos, toPos) {\n    if (fromPos === void 0) {\n      fromPos = 0;\n    }\n    if (toPos === void 0) {\n      toPos = this.value.length;\n    }\n    return this.value.slice(fromPos, toPos).length;\n  }\n  doValidate(flags) {\n    return this.masked.doValidate(this.currentMaskFlags(flags)) && (!this.parent || this.parent.doValidate(this.currentMaskFlags(flags)));\n  }\n  doCommit() {\n    this.masked.doCommit();\n  }\n  get state() {\n    return {\n      _value: this.value,\n      _rawInputValue: this.rawInputValue,\n      masked: this.masked.state,\n      isFilled: this.isFilled\n    };\n  }\n  set state(state) {\n    this.masked.state = state.masked;\n    this.isFilled = state.isFilled;\n  }\n  currentMaskFlags(flags) {\n    return {\n      ...flags,\n      _beforeTailState: flags?._beforeTailState?.masked || flags?._beforeTailState\n    };\n  }\n}\n\nexport { PatternInputDefinition as default };\n","import Masked from './base.js';\nimport IMask from '../core/holder.js';\nimport '../core/change-details.js';\nimport '../core/continuous-tail-details.js';\nimport '../core/utils.js';\n\n/** Masking by RegExp */\nclass MaskedRegExp extends Masked {\n  /** */\n\n  /** Enable characters overwriting */\n\n  /** */\n\n  /** */\n\n  updateOptions(opts) {\n    super.updateOptions(opts);\n  }\n  _update(opts) {\n    const mask = opts.mask;\n    if (mask) opts.validate = value => value.search(mask) >= 0;\n    super._update(opts);\n  }\n}\nIMask.MaskedRegExp = MaskedRegExp;\n\nexport { MaskedRegExp as default };\n","import ChangeDetails from '../core/change-details.js';\nimport IMask from '../core/holder.js';\nimport { DIRECTION } from '../core/utils.js';\nimport Masked from './base.js';\nimport createMask, { normalizeOpts } from './factory.js';\nimport ChunksTailDetails from './pattern/chunk-tail-details.js';\nimport PatternCursor from './pattern/cursor.js';\nimport PatternFixedDefinition from './pattern/fixed-definition.js';\nimport PatternInputDefinition from './pattern/input-definition.js';\nimport './regexp.js';\nimport '../core/continuous-tail-details.js';\n\n/** Pattern mask */\nclass MaskedPattern extends Masked {\n  static DEFAULTS = {\n    lazy: true,\n    placeholderChar: '_'\n  };\n  static STOP_CHAR = '`';\n  static ESCAPE_CHAR = '\\\\';\n  static InputDefinition = PatternInputDefinition;\n  static FixedDefinition = PatternFixedDefinition;\n\n  /** */\n\n  /** */\n\n  /** Single char for empty input */\n\n  /** Single char for filled input */\n\n  /** Show placeholder only when needed */\n\n  /** Enable characters overwriting */\n\n  /** */\n\n  /** */\n\n  constructor(opts) {\n    super({\n      ...MaskedPattern.DEFAULTS,\n      ...opts,\n      definitions: Object.assign({}, PatternInputDefinition.DEFAULT_DEFINITIONS, opts?.definitions)\n    });\n  }\n  updateOptions(opts) {\n    super.updateOptions(opts);\n  }\n  _update(opts) {\n    opts.definitions = Object.assign({}, this.definitions, opts.definitions);\n    super._update(opts);\n    this._rebuildMask();\n  }\n  _rebuildMask() {\n    const defs = this.definitions;\n    this._blocks = [];\n    this.exposeBlock = undefined;\n    this._stops = [];\n    this._maskedBlocks = {};\n    const pattern = this.mask;\n    if (!pattern || !defs) return;\n    let unmaskingBlock = false;\n    let optionalBlock = false;\n    for (let i = 0; i < pattern.length; ++i) {\n      if (this.blocks) {\n        const p = pattern.slice(i);\n        const bNames = Object.keys(this.blocks).filter(bName => p.indexOf(bName) === 0);\n        // order by key length\n        bNames.sort((a, b) => b.length - a.length);\n        // use block name with max length\n        const bName = bNames[0];\n        if (bName) {\n          const {\n            expose,\n            ...blockOpts\n          } = normalizeOpts(this.blocks[bName]);\n          const maskedBlock = createMask({\n            lazy: this.lazy,\n            eager: this.eager,\n            placeholderChar: this.placeholderChar,\n            displayChar: this.displayChar,\n            overwrite: this.overwrite,\n            ...blockOpts,\n            parent: this\n          });\n          if (maskedBlock) {\n            this._blocks.push(maskedBlock);\n            if (expose) this.exposeBlock = maskedBlock;\n\n            // store block index\n            if (!this._maskedBlocks[bName]) this._maskedBlocks[bName] = [];\n            this._maskedBlocks[bName].push(this._blocks.length - 1);\n          }\n          i += bName.length - 1;\n          continue;\n        }\n      }\n      let char = pattern[i];\n      let isInput = (char in defs);\n      if (char === MaskedPattern.STOP_CHAR) {\n        this._stops.push(this._blocks.length);\n        continue;\n      }\n      if (char === '{' || char === '}') {\n        unmaskingBlock = !unmaskingBlock;\n        continue;\n      }\n      if (char === '[' || char === ']') {\n        optionalBlock = !optionalBlock;\n        continue;\n      }\n      if (char === MaskedPattern.ESCAPE_CHAR) {\n        ++i;\n        char = pattern[i];\n        if (!char) break;\n        isInput = false;\n      }\n      const def = isInput ? new PatternInputDefinition({\n        isOptional: optionalBlock,\n        lazy: this.lazy,\n        eager: this.eager,\n        placeholderChar: this.placeholderChar,\n        displayChar: this.displayChar,\n        ...normalizeOpts(defs[char]),\n        parent: this\n      }) : new PatternFixedDefinition({\n        char,\n        eager: this.eager,\n        isUnmasking: unmaskingBlock\n      });\n      this._blocks.push(def);\n    }\n  }\n  get state() {\n    return {\n      ...super.state,\n      _blocks: this._blocks.map(b => b.state)\n    };\n  }\n  set state(state) {\n    const {\n      _blocks,\n      ...maskedState\n    } = state;\n    this._blocks.forEach((b, bi) => b.state = _blocks[bi]);\n    super.state = maskedState;\n  }\n  reset() {\n    super.reset();\n    this._blocks.forEach(b => b.reset());\n  }\n  get isComplete() {\n    return this.exposeBlock ? this.exposeBlock.isComplete : this._blocks.every(b => b.isComplete);\n  }\n  get isFilled() {\n    return this._blocks.every(b => b.isFilled);\n  }\n  get isFixed() {\n    return this._blocks.every(b => b.isFixed);\n  }\n  get isOptional() {\n    return this._blocks.every(b => b.isOptional);\n  }\n  doCommit() {\n    this._blocks.forEach(b => b.doCommit());\n    super.doCommit();\n  }\n  get unmaskedValue() {\n    return this.exposeBlock ? this.exposeBlock.unmaskedValue : this._blocks.reduce((str, b) => str += b.unmaskedValue, '');\n  }\n  set unmaskedValue(unmaskedValue) {\n    if (this.exposeBlock) {\n      const tail = this.extractTail(this._blockStartPos(this._blocks.indexOf(this.exposeBlock)) + this.exposeBlock.displayValue.length);\n      this.exposeBlock.unmaskedValue = unmaskedValue;\n      this.appendTail(tail);\n      this.doCommit();\n    } else super.unmaskedValue = unmaskedValue;\n  }\n  get value() {\n    return this.exposeBlock ? this.exposeBlock.value :\n    // TODO return _value when not in change?\n    this._blocks.reduce((str, b) => str += b.value, '');\n  }\n  set value(value) {\n    if (this.exposeBlock) {\n      const tail = this.extractTail(this._blockStartPos(this._blocks.indexOf(this.exposeBlock)) + this.exposeBlock.displayValue.length);\n      this.exposeBlock.value = value;\n      this.appendTail(tail);\n      this.doCommit();\n    } else super.value = value;\n  }\n  get typedValue() {\n    return this.exposeBlock ? this.exposeBlock.typedValue : super.typedValue;\n  }\n  set typedValue(value) {\n    if (this.exposeBlock) {\n      const tail = this.extractTail(this._blockStartPos(this._blocks.indexOf(this.exposeBlock)) + this.exposeBlock.displayValue.length);\n      this.exposeBlock.typedValue = value;\n      this.appendTail(tail);\n      this.doCommit();\n    } else super.typedValue = value;\n  }\n  get displayValue() {\n    return this._blocks.reduce((str, b) => str += b.displayValue, '');\n  }\n  appendTail(tail) {\n    return super.appendTail(tail).aggregate(this._appendPlaceholder());\n  }\n  _appendEager() {\n    const details = new ChangeDetails();\n    let startBlockIndex = this._mapPosToBlock(this.displayValue.length)?.index;\n    if (startBlockIndex == null) return details;\n\n    // TODO test if it works for nested pattern masks\n    if (this._blocks[startBlockIndex].isFilled) ++startBlockIndex;\n    for (let bi = startBlockIndex; bi < this._blocks.length; ++bi) {\n      const d = this._blocks[bi]._appendEager();\n      if (!d.inserted) break;\n      details.aggregate(d);\n    }\n    return details;\n  }\n  _appendCharRaw(ch, flags) {\n    if (flags === void 0) {\n      flags = {};\n    }\n    const blockIter = this._mapPosToBlock(this.displayValue.length);\n    const details = new ChangeDetails();\n    if (!blockIter) return details;\n    for (let bi = blockIter.index;; ++bi) {\n      const block = this._blocks[bi];\n      if (!block) break;\n      const blockDetails = block._appendChar(ch, {\n        ...flags,\n        _beforeTailState: flags._beforeTailState?._blocks?.[bi]\n      });\n      const skip = blockDetails.skip;\n      details.aggregate(blockDetails);\n      if (skip || blockDetails.rawInserted) break; // go next char\n    }\n    return details;\n  }\n  extractTail(fromPos, toPos) {\n    if (fromPos === void 0) {\n      fromPos = 0;\n    }\n    if (toPos === void 0) {\n      toPos = this.displayValue.length;\n    }\n    const chunkTail = new ChunksTailDetails();\n    if (fromPos === toPos) return chunkTail;\n    this._forEachBlocksInRange(fromPos, toPos, (b, bi, bFromPos, bToPos) => {\n      const blockChunk = b.extractTail(bFromPos, bToPos);\n      blockChunk.stop = this._findStopBefore(bi);\n      blockChunk.from = this._blockStartPos(bi);\n      if (blockChunk instanceof ChunksTailDetails) blockChunk.blockIndex = bi;\n      chunkTail.extend(blockChunk);\n    });\n    return chunkTail;\n  }\n  extractInput(fromPos, toPos, flags) {\n    if (fromPos === void 0) {\n      fromPos = 0;\n    }\n    if (toPos === void 0) {\n      toPos = this.displayValue.length;\n    }\n    if (flags === void 0) {\n      flags = {};\n    }\n    if (fromPos === toPos) return '';\n    let input = '';\n    this._forEachBlocksInRange(fromPos, toPos, (b, _, fromPos, toPos) => {\n      input += b.extractInput(fromPos, toPos, flags);\n    });\n    return input;\n  }\n  _findStopBefore(blockIndex) {\n    let stopBefore;\n    for (let si = 0; si < this._stops.length; ++si) {\n      const stop = this._stops[si];\n      if (stop <= blockIndex) stopBefore = stop;else break;\n    }\n    return stopBefore;\n  }\n\n  /** Appends placeholder depending on laziness */\n  _appendPlaceholder(toBlockIndex) {\n    const details = new ChangeDetails();\n    if (this.lazy && toBlockIndex == null) return details;\n    const startBlockIter = this._mapPosToBlock(this.displayValue.length);\n    if (!startBlockIter) return details;\n    const startBlockIndex = startBlockIter.index;\n    const endBlockIndex = toBlockIndex != null ? toBlockIndex : this._blocks.length;\n    this._blocks.slice(startBlockIndex, endBlockIndex).forEach(b => {\n      if (!b.lazy || toBlockIndex != null) {\n        const bDetails = b._appendPlaceholder(b._blocks?.length);\n        this._value += bDetails.inserted;\n        details.aggregate(bDetails);\n      }\n    });\n    return details;\n  }\n\n  /** Finds block in pos */\n  _mapPosToBlock(pos) {\n    let accVal = '';\n    for (let bi = 0; bi < this._blocks.length; ++bi) {\n      const block = this._blocks[bi];\n      const blockStartPos = accVal.length;\n      accVal += block.displayValue;\n      if (pos <= accVal.length) {\n        return {\n          index: bi,\n          offset: pos - blockStartPos\n        };\n      }\n    }\n  }\n  _blockStartPos(blockIndex) {\n    return this._blocks.slice(0, blockIndex).reduce((pos, b) => pos += b.displayValue.length, 0);\n  }\n  _forEachBlocksInRange(fromPos, toPos, fn) {\n    if (toPos === void 0) {\n      toPos = this.displayValue.length;\n    }\n    const fromBlockIter = this._mapPosToBlock(fromPos);\n    if (fromBlockIter) {\n      const toBlockIter = this._mapPosToBlock(toPos);\n      // process first block\n      const isSameBlock = toBlockIter && fromBlockIter.index === toBlockIter.index;\n      const fromBlockStartPos = fromBlockIter.offset;\n      const fromBlockEndPos = toBlockIter && isSameBlock ? toBlockIter.offset : this._blocks[fromBlockIter.index].displayValue.length;\n      fn(this._blocks[fromBlockIter.index], fromBlockIter.index, fromBlockStartPos, fromBlockEndPos);\n      if (toBlockIter && !isSameBlock) {\n        // process intermediate blocks\n        for (let bi = fromBlockIter.index + 1; bi < toBlockIter.index; ++bi) {\n          fn(this._blocks[bi], bi, 0, this._blocks[bi].displayValue.length);\n        }\n\n        // process last block\n        fn(this._blocks[toBlockIter.index], toBlockIter.index, 0, toBlockIter.offset);\n      }\n    }\n  }\n  remove(fromPos, toPos) {\n    if (fromPos === void 0) {\n      fromPos = 0;\n    }\n    if (toPos === void 0) {\n      toPos = this.displayValue.length;\n    }\n    const removeDetails = super.remove(fromPos, toPos);\n    this._forEachBlocksInRange(fromPos, toPos, (b, _, bFromPos, bToPos) => {\n      removeDetails.aggregate(b.remove(bFromPos, bToPos));\n    });\n    return removeDetails;\n  }\n  nearestInputPos(cursorPos, direction) {\n    if (direction === void 0) {\n      direction = DIRECTION.NONE;\n    }\n    if (!this._blocks.length) return 0;\n    const cursor = new PatternCursor(this, cursorPos);\n    if (direction === DIRECTION.NONE) {\n      // -------------------------------------------------\n      // NONE should only go out from fixed to the right!\n      // -------------------------------------------------\n      if (cursor.pushRightBeforeInput()) return cursor.pos;\n      cursor.popState();\n      if (cursor.pushLeftBeforeInput()) return cursor.pos;\n      return this.displayValue.length;\n    }\n\n    // FORCE is only about a|* otherwise is 0\n    if (direction === DIRECTION.LEFT || direction === DIRECTION.FORCE_LEFT) {\n      // try to break fast when *|a\n      if (direction === DIRECTION.LEFT) {\n        cursor.pushRightBeforeFilled();\n        if (cursor.ok && cursor.pos === cursorPos) return cursorPos;\n        cursor.popState();\n      }\n\n      // forward flow\n      cursor.pushLeftBeforeInput();\n      cursor.pushLeftBeforeRequired();\n      cursor.pushLeftBeforeFilled();\n\n      // backward flow\n      if (direction === DIRECTION.LEFT) {\n        cursor.pushRightBeforeInput();\n        cursor.pushRightBeforeRequired();\n        if (cursor.ok && cursor.pos <= cursorPos) return cursor.pos;\n        cursor.popState();\n        if (cursor.ok && cursor.pos <= cursorPos) return cursor.pos;\n        cursor.popState();\n      }\n      if (cursor.ok) return cursor.pos;\n      if (direction === DIRECTION.FORCE_LEFT) return 0;\n      cursor.popState();\n      if (cursor.ok) return cursor.pos;\n      cursor.popState();\n      if (cursor.ok) return cursor.pos;\n      return 0;\n    }\n    if (direction === DIRECTION.RIGHT || direction === DIRECTION.FORCE_RIGHT) {\n      // forward flow\n      cursor.pushRightBeforeInput();\n      cursor.pushRightBeforeRequired();\n      if (cursor.pushRightBeforeFilled()) return cursor.pos;\n      if (direction === DIRECTION.FORCE_RIGHT) return this.displayValue.length;\n\n      // backward flow\n      cursor.popState();\n      if (cursor.ok) return cursor.pos;\n      cursor.popState();\n      if (cursor.ok) return cursor.pos;\n      return this.nearestInputPos(cursorPos, DIRECTION.LEFT);\n    }\n    return cursorPos;\n  }\n  totalInputPositions(fromPos, toPos) {\n    if (fromPos === void 0) {\n      fromPos = 0;\n    }\n    if (toPos === void 0) {\n      toPos = this.displayValue.length;\n    }\n    let total = 0;\n    this._forEachBlocksInRange(fromPos, toPos, (b, _, bFromPos, bToPos) => {\n      total += b.totalInputPositions(bFromPos, bToPos);\n    });\n    return total;\n  }\n\n  /** Get block by name */\n  maskedBlock(name) {\n    return this.maskedBlocks(name)[0];\n  }\n\n  /** Get all blocks by name */\n  maskedBlocks(name) {\n    const indices = this._maskedBlocks[name];\n    if (!indices) return [];\n    return indices.map(gi => this._blocks[gi]);\n  }\n}\nIMask.MaskedPattern = MaskedPattern;\n\nexport { MaskedPattern as default };\n","import IMask from '../core/holder.js';\nimport MaskedPattern from './pattern.js';\nimport '../core/change-details.js';\nimport '../core/utils.js';\nimport './base.js';\nimport '../core/continuous-tail-details.js';\nimport './factory.js';\nimport './pattern/chunk-tail-details.js';\nimport './pattern/cursor.js';\nimport './pattern/fixed-definition.js';\nimport './pattern/input-definition.js';\nimport './regexp.js';\n\n/** Pattern which accepts ranges */\nclass MaskedRange extends MaskedPattern {\n  /**\n    Optionally sets max length of pattern.\n    Used when pattern length is longer then `to` param length. Pads zeros at start in this case.\n  */\n\n  /** Min bound */\n\n  /** Max bound */\n\n  /** */\n\n  get _matchFrom() {\n    return this.maxLength - String(this.from).length;\n  }\n  constructor(opts) {\n    super(opts); // mask will be created in _update\n  }\n  updateOptions(opts) {\n    super.updateOptions(opts);\n  }\n  _update(opts) {\n    const {\n      to = this.to || 0,\n      from = this.from || 0,\n      maxLength = this.maxLength || 0,\n      autofix = this.autofix,\n      ...patternOpts\n    } = opts;\n    this.to = to;\n    this.from = from;\n    this.maxLength = Math.max(String(to).length, maxLength);\n    this.autofix = autofix;\n    const fromStr = String(this.from).padStart(this.maxLength, '0');\n    const toStr = String(this.to).padStart(this.maxLength, '0');\n    let sameCharsCount = 0;\n    while (sameCharsCount < toStr.length && toStr[sameCharsCount] === fromStr[sameCharsCount]) ++sameCharsCount;\n    patternOpts.mask = toStr.slice(0, sameCharsCount).replace(/0/g, '\\\\0') + '0'.repeat(this.maxLength - sameCharsCount);\n    super._update(patternOpts);\n  }\n  get isComplete() {\n    return super.isComplete && Boolean(this.value);\n  }\n  boundaries(str) {\n    let minstr = '';\n    let maxstr = '';\n    const [, placeholder, num] = str.match(/^(\\D*)(\\d*)(\\D*)/) || [];\n    if (num) {\n      minstr = '0'.repeat(placeholder.length) + num;\n      maxstr = '9'.repeat(placeholder.length) + num;\n    }\n    minstr = minstr.padEnd(this.maxLength, '0');\n    maxstr = maxstr.padEnd(this.maxLength, '9');\n    return [minstr, maxstr];\n  }\n  doPrepareChar(ch, flags) {\n    if (flags === void 0) {\n      flags = {};\n    }\n    let details;\n    [ch, details] = super.doPrepareChar(ch.replace(/\\D/g, ''), flags);\n    if (!this.autofix || !ch) return [ch, details];\n    const fromStr = String(this.from).padStart(this.maxLength, '0');\n    const toStr = String(this.to).padStart(this.maxLength, '0');\n    const nextVal = this.value + ch;\n    if (nextVal.length > this.maxLength) return ['', details];\n    const [minstr, maxstr] = this.boundaries(nextVal);\n    if (Number(maxstr) < this.from) return [fromStr[nextVal.length - 1], details];\n    if (Number(minstr) > this.to) {\n      if (this.autofix === 'pad' && nextVal.length < this.maxLength) {\n        return ['', details.aggregate(this.append(fromStr[nextVal.length - 1] + ch, flags))];\n      }\n      return [toStr[nextVal.length - 1], details];\n    }\n    return [ch, details];\n  }\n  doValidate(flags) {\n    const str = this.value;\n    const firstNonZero = str.search(/[^0]/);\n    if (firstNonZero === -1 && str.length <= this._matchFrom) return true;\n    const [minstr, maxstr] = this.boundaries(str);\n    return this.from <= Number(maxstr) && Number(minstr) <= this.to && super.doValidate(flags);\n  }\n}\nIMask.MaskedRange = MaskedRange;\n\nexport { MaskedRange as default };\n","import MaskedPattern from './pattern.js';\nimport MaskedRange from './range.js';\nimport IMask from '../core/holder.js';\nimport { isString } from '../core/utils.js';\nimport '../core/change-details.js';\nimport './base.js';\nimport '../core/continuous-tail-details.js';\nimport './factory.js';\nimport './pattern/chunk-tail-details.js';\nimport './pattern/cursor.js';\nimport './pattern/fixed-definition.js';\nimport './pattern/input-definition.js';\nimport './regexp.js';\n\n/** Date mask */\nclass MaskedDate extends MaskedPattern {\n  static GET_DEFAULT_BLOCKS = () => ({\n    d: {\n      mask: MaskedRange,\n      from: 1,\n      to: 31,\n      maxLength: 2\n    },\n    m: {\n      mask: MaskedRange,\n      from: 1,\n      to: 12,\n      maxLength: 2\n    },\n    Y: {\n      mask: MaskedRange,\n      from: 1900,\n      to: 9999\n    }\n  });\n  static DEFAULTS = {\n    mask: Date,\n    pattern: 'd{.}`m{.}`Y',\n    format: (date, masked) => {\n      if (!date) return '';\n      const day = String(date.getDate()).padStart(2, '0');\n      const month = String(date.getMonth() + 1).padStart(2, '0');\n      const year = date.getFullYear();\n      return [day, month, year].join('.');\n    },\n    parse: (str, masked) => {\n      const [day, month, year] = str.split('.').map(Number);\n      return new Date(year, month - 1, day);\n    }\n  };\n  static extractPatternOptions(opts) {\n    const {\n      mask,\n      pattern,\n      ...patternOpts\n    } = opts;\n    return {\n      ...patternOpts,\n      mask: isString(mask) ? mask : pattern\n    };\n  }\n\n  /** Pattern mask for date according to {@link MaskedDate#format} */\n\n  /** Start date */\n\n  /** End date */\n\n  /** */\n\n  /** Format typed value to string */\n\n  /** Parse string to get typed value */\n\n  constructor(opts) {\n    super(MaskedDate.extractPatternOptions({\n      ...MaskedDate.DEFAULTS,\n      ...opts\n    }));\n  }\n  updateOptions(opts) {\n    super.updateOptions(opts);\n  }\n  _update(opts) {\n    const {\n      mask,\n      pattern,\n      blocks,\n      ...patternOpts\n    } = {\n      ...MaskedDate.DEFAULTS,\n      ...opts\n    };\n    const patternBlocks = Object.assign({}, MaskedDate.GET_DEFAULT_BLOCKS());\n    // adjust year block\n    if (opts.min) patternBlocks.Y.from = opts.min.getFullYear();\n    if (opts.max) patternBlocks.Y.to = opts.max.getFullYear();\n    if (opts.min && opts.max && patternBlocks.Y.from === patternBlocks.Y.to) {\n      patternBlocks.m.from = opts.min.getMonth() + 1;\n      patternBlocks.m.to = opts.max.getMonth() + 1;\n      if (patternBlocks.m.from === patternBlocks.m.to) {\n        patternBlocks.d.from = opts.min.getDate();\n        patternBlocks.d.to = opts.max.getDate();\n      }\n    }\n    Object.assign(patternBlocks, this.blocks, blocks);\n\n    // add autofix\n    Object.keys(patternBlocks).forEach(bk => {\n      const b = patternBlocks[bk];\n      if (!('autofix' in b) && 'autofix' in opts) b.autofix = opts.autofix;\n    });\n    super._update({\n      ...patternOpts,\n      mask: isString(mask) ? mask : pattern,\n      blocks: patternBlocks\n    });\n  }\n  doValidate(flags) {\n    const date = this.date;\n    return super.doValidate(flags) && (!this.isComplete || this.isDateExist(this.value) && date != null && (this.min == null || this.min <= date) && (this.max == null || date <= this.max));\n  }\n\n  /** Checks if date is exists */\n  isDateExist(str) {\n    return this.format(this.parse(str, this), this).indexOf(str) >= 0;\n  }\n\n  /** Parsed Date */\n  get date() {\n    return this.typedValue;\n  }\n  set date(date) {\n    this.typedValue = date;\n  }\n  get typedValue() {\n    return this.isComplete ? super.typedValue : null;\n  }\n  set typedValue(value) {\n    super.typedValue = value;\n  }\n  maskEquals(mask) {\n    return mask === Date || super.maskEquals(mask);\n  }\n  optionsIsChanged(opts) {\n    return super.optionsIsChanged(MaskedDate.extractPatternOptions(opts));\n  }\n}\nIMask.MaskedDate = MaskedDate;\n\nexport { MaskedDate as default };\n","import { objectIncludes, DIRECTION } from '../core/utils.js';\nimport ChangeDetails from '../core/change-details.js';\nimport createMask, { normalizeOpts } from './factory.js';\nimport Masked from './base.js';\nimport IMask from '../core/holder.js';\nimport '../core/continuous-tail-details.js';\n\n/** Dynamic mask for choosing appropriate mask in run-time */\nclass MaskedDynamic extends Masked {\n  static DEFAULTS;\n\n  /** Currently chosen mask */\n\n  /** Currently chosen mask */\n\n  /** Compliled {@link Masked} options */\n\n  /** Chooses {@link Masked} depending on input value */\n\n  constructor(opts) {\n    super({\n      ...MaskedDynamic.DEFAULTS,\n      ...opts\n    });\n    this.currentMask = undefined;\n  }\n  updateOptions(opts) {\n    super.updateOptions(opts);\n  }\n  _update(opts) {\n    super._update(opts);\n    if ('mask' in opts) {\n      this.exposeMask = undefined;\n      // mask could be totally dynamic with only `dispatch` option\n      this.compiledMasks = Array.isArray(opts.mask) ? opts.mask.map(m => {\n        const {\n          expose,\n          ...maskOpts\n        } = normalizeOpts(m);\n        const masked = createMask({\n          overwrite: this._overwrite,\n          eager: this._eager,\n          skipInvalid: this._skipInvalid,\n          ...maskOpts\n        });\n        if (expose) this.exposeMask = masked;\n        return masked;\n      }) : [];\n\n      // this.currentMask = this.doDispatch(''); // probably not needed but lets see\n    }\n  }\n  _appendCharRaw(ch, flags) {\n    if (flags === void 0) {\n      flags = {};\n    }\n    const details = this._applyDispatch(ch, flags);\n    if (this.currentMask) {\n      details.aggregate(this.currentMask._appendChar(ch, this.currentMaskFlags(flags)));\n    }\n    return details;\n  }\n  _applyDispatch(appended, flags, tail) {\n    if (appended === void 0) {\n      appended = '';\n    }\n    if (flags === void 0) {\n      flags = {};\n    }\n    if (tail === void 0) {\n      tail = '';\n    }\n    const prevValueBeforeTail = flags.tail && flags._beforeTailState != null ? flags._beforeTailState._value : this.value;\n    const inputValue = this.rawInputValue;\n    const insertValue = flags.tail && flags._beforeTailState != null ? flags._beforeTailState._rawInputValue : inputValue;\n    const tailValue = inputValue.slice(insertValue.length);\n    const prevMask = this.currentMask;\n    const details = new ChangeDetails();\n    const prevMaskState = prevMask?.state;\n\n    // clone flags to prevent overwriting `_beforeTailState`\n    this.currentMask = this.doDispatch(appended, {\n      ...flags\n    }, tail);\n\n    // restore state after dispatch\n    if (this.currentMask) {\n      if (this.currentMask !== prevMask) {\n        // if mask changed reapply input\n        this.currentMask.reset();\n        if (insertValue) {\n          const d = this.currentMask.append(insertValue, {\n            raw: true\n          });\n          details.tailShift = d.inserted.length - prevValueBeforeTail.length;\n        }\n        if (tailValue) {\n          details.tailShift += this.currentMask.append(tailValue, {\n            raw: true,\n            tail: true\n          }).tailShift;\n        }\n      } else if (prevMaskState) {\n        // Dispatch can do something bad with state, so\n        // restore prev mask state\n        this.currentMask.state = prevMaskState;\n      }\n    }\n    return details;\n  }\n  _appendPlaceholder() {\n    const details = this._applyDispatch();\n    if (this.currentMask) {\n      details.aggregate(this.currentMask._appendPlaceholder());\n    }\n    return details;\n  }\n  _appendEager() {\n    const details = this._applyDispatch();\n    if (this.currentMask) {\n      details.aggregate(this.currentMask._appendEager());\n    }\n    return details;\n  }\n  appendTail(tail) {\n    const details = new ChangeDetails();\n    if (tail) details.aggregate(this._applyDispatch('', {}, tail));\n    return details.aggregate(this.currentMask ? this.currentMask.appendTail(tail) : super.appendTail(tail));\n  }\n  currentMaskFlags(flags) {\n    return {\n      ...flags,\n      _beforeTailState: flags._beforeTailState?.currentMaskRef === this.currentMask && flags._beforeTailState?.currentMask || flags._beforeTailState\n    };\n  }\n  doDispatch(appended, flags, tail) {\n    if (flags === void 0) {\n      flags = {};\n    }\n    if (tail === void 0) {\n      tail = '';\n    }\n    return this.dispatch(appended, this, flags, tail);\n  }\n  doValidate(flags) {\n    return super.doValidate(flags) && (!this.currentMask || this.currentMask.doValidate(this.currentMaskFlags(flags)));\n  }\n  doPrepare(str, flags) {\n    if (flags === void 0) {\n      flags = {};\n    }\n    let [s, details] = super.doPrepare(str, flags);\n    if (this.currentMask) {\n      let currentDetails;\n      [s, currentDetails] = super.doPrepare(s, this.currentMaskFlags(flags));\n      details = details.aggregate(currentDetails);\n    }\n    return [s, details];\n  }\n  doPrepareChar(str, flags) {\n    if (flags === void 0) {\n      flags = {};\n    }\n    let [s, details] = super.doPrepareChar(str, flags);\n    if (this.currentMask) {\n      let currentDetails;\n      [s, currentDetails] = super.doPrepareChar(s, this.currentMaskFlags(flags));\n      details = details.aggregate(currentDetails);\n    }\n    return [s, details];\n  }\n  reset() {\n    this.currentMask?.reset();\n    this.compiledMasks.forEach(m => m.reset());\n  }\n  get value() {\n    return this.exposeMask ? this.exposeMask.value : this.currentMask ? this.currentMask.value : '';\n  }\n  set value(value) {\n    if (this.exposeMask) {\n      this.exposeMask.value = value;\n      this.currentMask = this.exposeMask;\n      this._applyDispatch();\n    } else super.value = value;\n  }\n  get unmaskedValue() {\n    return this.exposeMask ? this.exposeMask.unmaskedValue : this.currentMask ? this.currentMask.unmaskedValue : '';\n  }\n  set unmaskedValue(unmaskedValue) {\n    if (this.exposeMask) {\n      this.exposeMask.unmaskedValue = unmaskedValue;\n      this.currentMask = this.exposeMask;\n      this._applyDispatch();\n    } else super.unmaskedValue = unmaskedValue;\n  }\n  get typedValue() {\n    return this.exposeMask ? this.exposeMask.typedValue : this.currentMask ? this.currentMask.typedValue : '';\n  }\n  set typedValue(typedValue) {\n    if (this.exposeMask) {\n      this.exposeMask.typedValue = typedValue;\n      this.currentMask = this.exposeMask;\n      this._applyDispatch();\n      return;\n    }\n    let unmaskedValue = String(typedValue);\n\n    // double check it\n    if (this.currentMask) {\n      this.currentMask.typedValue = typedValue;\n      unmaskedValue = this.currentMask.unmaskedValue;\n    }\n    this.unmaskedValue = unmaskedValue;\n  }\n  get displayValue() {\n    return this.currentMask ? this.currentMask.displayValue : '';\n  }\n  get isComplete() {\n    return Boolean(this.currentMask?.isComplete);\n  }\n  get isFilled() {\n    return Boolean(this.currentMask?.isFilled);\n  }\n  remove(fromPos, toPos) {\n    const details = new ChangeDetails();\n    if (this.currentMask) {\n      details.aggregate(this.currentMask.remove(fromPos, toPos))\n      // update with dispatch\n      .aggregate(this._applyDispatch());\n    }\n    return details;\n  }\n  get state() {\n    return {\n      ...super.state,\n      _rawInputValue: this.rawInputValue,\n      compiledMasks: this.compiledMasks.map(m => m.state),\n      currentMaskRef: this.currentMask,\n      currentMask: this.currentMask?.state\n    };\n  }\n  set state(state) {\n    const {\n      compiledMasks,\n      currentMaskRef,\n      currentMask,\n      ...maskedState\n    } = state;\n    if (compiledMasks) this.compiledMasks.forEach((m, mi) => m.state = compiledMasks[mi]);\n    if (currentMaskRef != null) {\n      this.currentMask = currentMaskRef;\n      this.currentMask.state = currentMask;\n    }\n    super.state = maskedState;\n  }\n  extractInput(fromPos, toPos, flags) {\n    return this.currentMask ? this.currentMask.extractInput(fromPos, toPos, flags) : '';\n  }\n  extractTail(fromPos, toPos) {\n    return this.currentMask ? this.currentMask.extractTail(fromPos, toPos) : super.extractTail(fromPos, toPos);\n  }\n  doCommit() {\n    if (this.currentMask) this.currentMask.doCommit();\n    super.doCommit();\n  }\n  nearestInputPos(cursorPos, direction) {\n    return this.currentMask ? this.currentMask.nearestInputPos(cursorPos, direction) : super.nearestInputPos(cursorPos, direction);\n  }\n  get overwrite() {\n    return this.currentMask ? this.currentMask.overwrite : this._overwrite;\n  }\n  set overwrite(overwrite) {\n    this._overwrite = overwrite;\n  }\n  get eager() {\n    return this.currentMask ? this.currentMask.eager : this._eager;\n  }\n  set eager(eager) {\n    this._eager = eager;\n  }\n  get skipInvalid() {\n    return this.currentMask ? this.currentMask.skipInvalid : this._skipInvalid;\n  }\n  set skipInvalid(skipInvalid) {\n    this._skipInvalid = skipInvalid;\n  }\n  maskEquals(mask) {\n    return Array.isArray(mask) ? this.compiledMasks.every((m, mi) => {\n      if (!mask[mi]) return;\n      const {\n        mask: oldMask,\n        ...restOpts\n      } = mask[mi];\n      return objectIncludes(m, restOpts) && m.maskEquals(oldMask);\n    }) : super.maskEquals(mask);\n  }\n  typedValueEquals(value) {\n    return Boolean(this.currentMask?.typedValueEquals(value));\n  }\n}\nMaskedDynamic.DEFAULTS = {\n  dispatch: (appended, masked, flags, tail) => {\n    if (!masked.compiledMasks.length) return;\n    const inputValue = masked.rawInputValue;\n\n    // simulate input\n    const inputs = masked.compiledMasks.map((m, index) => {\n      const isCurrent = masked.currentMask === m;\n      const startInputPos = isCurrent ? m.displayValue.length : m.nearestInputPos(m.displayValue.length, DIRECTION.FORCE_LEFT);\n      if (m.rawInputValue !== inputValue) {\n        m.reset();\n        m.append(inputValue, {\n          raw: true\n        });\n      } else if (!isCurrent) {\n        m.remove(startInputPos);\n      }\n      m.append(appended, masked.currentMaskFlags(flags));\n      m.appendTail(tail);\n      return {\n        index,\n        weight: m.rawInputValue.length,\n        totalInputPositions: m.totalInputPositions(0, Math.max(startInputPos, m.nearestInputPos(m.displayValue.length, DIRECTION.FORCE_LEFT)))\n      };\n    });\n\n    // pop masks with longer values first\n    inputs.sort((i1, i2) => i2.weight - i1.weight || i2.totalInputPositions - i1.totalInputPositions);\n    return masked.compiledMasks[inputs[0].index];\n  }\n};\nIMask.MaskedDynamic = MaskedDynamic;\n\nexport { MaskedDynamic as default };\n","import MaskedPattern from './pattern.js';\nimport IMask from '../core/holder.js';\nimport '../core/change-details.js';\nimport '../core/utils.js';\nimport './base.js';\nimport '../core/continuous-tail-details.js';\nimport './factory.js';\nimport './pattern/chunk-tail-details.js';\nimport './pattern/cursor.js';\nimport './pattern/fixed-definition.js';\nimport './pattern/input-definition.js';\nimport './regexp.js';\n\n/** Pattern which validates enum values */\nclass MaskedEnum extends MaskedPattern {\n  constructor(opts) {\n    super(opts); // mask will be created in _update\n  }\n  updateOptions(opts) {\n    super.updateOptions(opts);\n  }\n  _update(opts) {\n    const {\n      enum: _enum,\n      ...eopts\n    } = opts;\n    if (_enum) {\n      const lengths = _enum.map(e => e.length);\n      const requiredLength = Math.min(...lengths);\n      const optionalLength = Math.max(...lengths) - requiredLength;\n      eopts.mask = '*'.repeat(requiredLength);\n      if (optionalLength) eopts.mask += '[' + '*'.repeat(optionalLength) + ']';\n      this.enum = _enum;\n    }\n    super._update(eopts);\n  }\n  doValidate(flags) {\n    return this.enum.some(e => e.indexOf(this.unmaskedValue) === 0) && super.doValidate(flags);\n  }\n}\nIMask.MaskedEnum = MaskedEnum;\n\nexport { MaskedEnum as default };\n","import Masked from './base.js';\nimport IMask from '../core/holder.js';\nimport '../core/change-details.js';\nimport '../core/continuous-tail-details.js';\nimport '../core/utils.js';\n\n/** Masking by custom Function */\nclass MaskedFunction extends Masked {\n  /** */\n\n  /** Enable characters overwriting */\n\n  /** */\n\n  /** */\n\n  updateOptions(opts) {\n    super.updateOptions(opts);\n  }\n  _update(opts) {\n    super._update({\n      ...opts,\n      validate: opts.mask\n    });\n  }\n}\nIMask.MaskedFunction = MaskedFunction;\n\nexport { MaskedFunction as default };\n","import { escapeRegExp, DIRECTION } from '../core/utils.js';\nimport ChangeDetails from '../core/change-details.js';\nimport Masked from './base.js';\nimport IMask from '../core/holder.js';\nimport '../core/continuous-tail-details.js';\n\n/** Number mask */\nclass MaskedNumber extends Masked {\n  static UNMASKED_RADIX = '.';\n  static EMPTY_VALUES = [...Masked.EMPTY_VALUES, 0];\n  static DEFAULTS = {\n    mask: Number,\n    radix: ',',\n    thousandsSeparator: '',\n    mapToRadix: [MaskedNumber.UNMASKED_RADIX],\n    min: Number.MIN_SAFE_INTEGER,\n    max: Number.MAX_SAFE_INTEGER,\n    scale: 2,\n    normalizeZeros: true,\n    padFractionalZeros: false,\n    parse: Number,\n    format: n => n.toLocaleString('en-US', {\n      useGrouping: false,\n      maximumFractionDigits: 20\n    })\n  };\n\n  /** Single char */\n\n  /** Single char */\n\n  /** Array of single chars */\n\n  /** */\n\n  /** */\n\n  /** Digits after point */\n\n  /** Flag to remove leading and trailing zeros in the end of editing */\n\n  /** Flag to pad trailing zeros after point in the end of editing */\n\n  /** Enable characters overwriting */\n\n  /** */\n\n  /** */\n\n  /** Format typed value to string */\n\n  /** Parse string to get typed value */\n\n  constructor(opts) {\n    super({\n      ...MaskedNumber.DEFAULTS,\n      ...opts\n    });\n  }\n  updateOptions(opts) {\n    super.updateOptions(opts);\n  }\n  _update(opts) {\n    super._update(opts);\n    this._updateRegExps();\n  }\n  _updateRegExps() {\n    const start = '^' + (this.allowNegative ? '[+|\\\\-]?' : '');\n    const mid = '\\\\d*';\n    const end = (this.scale ? `(${escapeRegExp(this.radix)}\\\\d{0,${this.scale}})?` : '') + '$';\n    this._numberRegExp = new RegExp(start + mid + end);\n    this._mapToRadixRegExp = new RegExp(`[${this.mapToRadix.map(escapeRegExp).join('')}]`, 'g');\n    this._thousandsSeparatorRegExp = new RegExp(escapeRegExp(this.thousandsSeparator), 'g');\n  }\n  _removeThousandsSeparators(value) {\n    return value.replace(this._thousandsSeparatorRegExp, '');\n  }\n  _insertThousandsSeparators(value) {\n    // https://stackoverflow.com/questions/2901102/how-to-print-a-number-with-commas-as-thousands-separators-in-javascript\n    const parts = value.split(this.radix);\n    parts[0] = parts[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, this.thousandsSeparator);\n    return parts.join(this.radix);\n  }\n  doPrepareChar(ch, flags) {\n    if (flags === void 0) {\n      flags = {};\n    }\n    const [prepCh, details] = super.doPrepareChar(this._removeThousandsSeparators(this.scale && this.mapToRadix.length && (\n    /*\n      radix should be mapped when\n      1) input is done from keyboard = flags.input && flags.raw\n      2) unmasked value is set = !flags.input && !flags.raw\n      and should not be mapped when\n      1) value is set = flags.input && !flags.raw\n      2) raw value is set = !flags.input && flags.raw\n    */\n    flags.input && flags.raw || !flags.input && !flags.raw) ? ch.replace(this._mapToRadixRegExp, this.radix) : ch), flags);\n    if (ch && !prepCh) details.skip = true;\n    if (prepCh && !this.allowPositive && !this.value && prepCh !== '-') details.aggregate(this._appendChar('-'));\n    return [prepCh, details];\n  }\n  _separatorsCount(to, extendOnSeparators) {\n    if (extendOnSeparators === void 0) {\n      extendOnSeparators = false;\n    }\n    let count = 0;\n    for (let pos = 0; pos < to; ++pos) {\n      if (this._value.indexOf(this.thousandsSeparator, pos) === pos) {\n        ++count;\n        if (extendOnSeparators) to += this.thousandsSeparator.length;\n      }\n    }\n    return count;\n  }\n  _separatorsCountFromSlice(slice) {\n    if (slice === void 0) {\n      slice = this._value;\n    }\n    return this._separatorsCount(this._removeThousandsSeparators(slice).length, true);\n  }\n  extractInput(fromPos, toPos, flags) {\n    if (fromPos === void 0) {\n      fromPos = 0;\n    }\n    if (toPos === void 0) {\n      toPos = this.displayValue.length;\n    }\n    [fromPos, toPos] = this._adjustRangeWithSeparators(fromPos, toPos);\n    return this._removeThousandsSeparators(super.extractInput(fromPos, toPos, flags));\n  }\n  _appendCharRaw(ch, flags) {\n    if (flags === void 0) {\n      flags = {};\n    }\n    if (!this.thousandsSeparator) return super._appendCharRaw(ch, flags);\n    const prevBeforeTailValue = flags.tail && flags._beforeTailState ? flags._beforeTailState._value : this._value;\n    const prevBeforeTailSeparatorsCount = this._separatorsCountFromSlice(prevBeforeTailValue);\n    this._value = this._removeThousandsSeparators(this.value);\n    const appendDetails = super._appendCharRaw(ch, flags);\n    this._value = this._insertThousandsSeparators(this._value);\n    const beforeTailValue = flags.tail && flags._beforeTailState ? flags._beforeTailState._value : this._value;\n    const beforeTailSeparatorsCount = this._separatorsCountFromSlice(beforeTailValue);\n    appendDetails.tailShift += (beforeTailSeparatorsCount - prevBeforeTailSeparatorsCount) * this.thousandsSeparator.length;\n    appendDetails.skip = !appendDetails.rawInserted && ch === this.thousandsSeparator;\n    return appendDetails;\n  }\n  _findSeparatorAround(pos) {\n    if (this.thousandsSeparator) {\n      const searchFrom = pos - this.thousandsSeparator.length + 1;\n      const separatorPos = this.value.indexOf(this.thousandsSeparator, searchFrom);\n      if (separatorPos <= pos) return separatorPos;\n    }\n    return -1;\n  }\n  _adjustRangeWithSeparators(from, to) {\n    const separatorAroundFromPos = this._findSeparatorAround(from);\n    if (separatorAroundFromPos >= 0) from = separatorAroundFromPos;\n    const separatorAroundToPos = this._findSeparatorAround(to);\n    if (separatorAroundToPos >= 0) to = separatorAroundToPos + this.thousandsSeparator.length;\n    return [from, to];\n  }\n  remove(fromPos, toPos) {\n    if (fromPos === void 0) {\n      fromPos = 0;\n    }\n    if (toPos === void 0) {\n      toPos = this.displayValue.length;\n    }\n    [fromPos, toPos] = this._adjustRangeWithSeparators(fromPos, toPos);\n    const valueBeforePos = this.value.slice(0, fromPos);\n    const valueAfterPos = this.value.slice(toPos);\n    const prevBeforeTailSeparatorsCount = this._separatorsCount(valueBeforePos.length);\n    this._value = this._insertThousandsSeparators(this._removeThousandsSeparators(valueBeforePos + valueAfterPos));\n    const beforeTailSeparatorsCount = this._separatorsCountFromSlice(valueBeforePos);\n    return new ChangeDetails({\n      tailShift: (beforeTailSeparatorsCount - prevBeforeTailSeparatorsCount) * this.thousandsSeparator.length\n    });\n  }\n  nearestInputPos(cursorPos, direction) {\n    if (!this.thousandsSeparator) return cursorPos;\n    switch (direction) {\n      case DIRECTION.NONE:\n      case DIRECTION.LEFT:\n      case DIRECTION.FORCE_LEFT:\n        {\n          const separatorAtLeftPos = this._findSeparatorAround(cursorPos - 1);\n          if (separatorAtLeftPos >= 0) {\n            const separatorAtLeftEndPos = separatorAtLeftPos + this.thousandsSeparator.length;\n            if (cursorPos < separatorAtLeftEndPos || this.value.length <= separatorAtLeftEndPos || direction === DIRECTION.FORCE_LEFT) {\n              return separatorAtLeftPos;\n            }\n          }\n          break;\n        }\n      case DIRECTION.RIGHT:\n      case DIRECTION.FORCE_RIGHT:\n        {\n          const separatorAtRightPos = this._findSeparatorAround(cursorPos);\n          if (separatorAtRightPos >= 0) {\n            return separatorAtRightPos + this.thousandsSeparator.length;\n          }\n        }\n    }\n    return cursorPos;\n  }\n  doValidate(flags) {\n    // validate as string\n    let valid = Boolean(this._removeThousandsSeparators(this.value).match(this._numberRegExp));\n    if (valid) {\n      // validate as number\n      const number = this.number;\n      valid = valid && !isNaN(number) && (\n      // check min bound for negative values\n      this.min == null || this.min >= 0 || this.min <= this.number) && (\n      // check max bound for positive values\n      this.max == null || this.max <= 0 || this.number <= this.max);\n    }\n    return valid && super.doValidate(flags);\n  }\n  doCommit() {\n    if (this.value) {\n      const number = this.number;\n      let validnum = number;\n\n      // check bounds\n      if (this.min != null) validnum = Math.max(validnum, this.min);\n      if (this.max != null) validnum = Math.min(validnum, this.max);\n      if (validnum !== number) this.unmaskedValue = this.format(validnum, this);\n      let formatted = this.value;\n      if (this.normalizeZeros) formatted = this._normalizeZeros(formatted);\n      if (this.padFractionalZeros && this.scale > 0) formatted = this._padFractionalZeros(formatted);\n      this._value = formatted;\n    }\n    super.doCommit();\n  }\n  _normalizeZeros(value) {\n    const parts = this._removeThousandsSeparators(value).split(this.radix);\n\n    // remove leading zeros\n    parts[0] = parts[0].replace(/^(\\D*)(0*)(\\d*)/, (match, sign, zeros, num) => sign + num);\n    // add leading zero\n    if (value.length && !/\\d$/.test(parts[0])) parts[0] = parts[0] + '0';\n    if (parts.length > 1) {\n      parts[1] = parts[1].replace(/0*$/, ''); // remove trailing zeros\n      if (!parts[1].length) parts.length = 1; // remove fractional\n    }\n    return this._insertThousandsSeparators(parts.join(this.radix));\n  }\n  _padFractionalZeros(value) {\n    if (!value) return value;\n    const parts = value.split(this.radix);\n    if (parts.length < 2) parts.push('');\n    parts[1] = parts[1].padEnd(this.scale, '0');\n    return parts.join(this.radix);\n  }\n  doSkipInvalid(ch, flags, checkTail) {\n    if (flags === void 0) {\n      flags = {};\n    }\n    const dropFractional = this.scale === 0 && ch !== this.thousandsSeparator && (ch === this.radix || ch === MaskedNumber.UNMASKED_RADIX || this.mapToRadix.includes(ch));\n    return super.doSkipInvalid(ch, flags, checkTail) && !dropFractional;\n  }\n  get unmaskedValue() {\n    return this._removeThousandsSeparators(this._normalizeZeros(this.value)).replace(this.radix, MaskedNumber.UNMASKED_RADIX);\n  }\n  set unmaskedValue(unmaskedValue) {\n    super.unmaskedValue = unmaskedValue;\n  }\n  get typedValue() {\n    return this.parse(this.unmaskedValue, this);\n  }\n  set typedValue(n) {\n    this.rawInputValue = this.format(n, this).replace(MaskedNumber.UNMASKED_RADIX, this.radix);\n  }\n\n  /** Parsed Number */\n  get number() {\n    return this.typedValue;\n  }\n  set number(number) {\n    this.typedValue = number;\n  }\n\n  /**\n    Is negative allowed\n  */\n  get allowNegative() {\n    return this.min != null && this.min < 0 || this.max != null && this.max < 0;\n  }\n\n  /**\n    Is positive allowed\n  */\n  get allowPositive() {\n    return this.min != null && this.min > 0 || this.max != null && this.max > 0;\n  }\n  typedValueEquals(value) {\n    // handle  0 -> '' case (typed = 0 even if value = '')\n    // for details see https://github.com/uNmAnNeR/imaskjs/issues/134\n    return (super.typedValueEquals(value) || MaskedNumber.EMPTY_VALUES.includes(value) && MaskedNumber.EMPTY_VALUES.includes(this.typedValue)) && !(value === 0 && this.value === '');\n  }\n}\nIMask.MaskedNumber = MaskedNumber;\n\nexport { MaskedNumber as default };\n","import createMask from './factory.js';\nimport IMask from '../core/holder.js';\nimport '../core/utils.js';\n\n/** Mask pipe source and destination types */\nconst PIPE_TYPE = {\n  MASKED: 'value',\n  UNMASKED: 'unmaskedValue',\n  TYPED: 'typedValue'\n};\n/** Creates new pipe function depending on mask type, source and destination options */\nfunction createPipe(arg, from, to) {\n  if (from === void 0) {\n    from = PIPE_TYPE.MASKED;\n  }\n  if (to === void 0) {\n    to = PIPE_TYPE.MASKED;\n  }\n  const masked = createMask(arg);\n  return value => masked.runIsolated(m => {\n    m[from] = value;\n    return m[to];\n  });\n}\n\n/** Pipes value through mask depending on mask type, source and destination options */\nfunction pipe(value, mask, from, to) {\n  return createPipe(mask, from, to)(value);\n}\nIMask.PIPE_TYPE = PIPE_TYPE;\nIMask.createPipe = createPipe;\nIMask.pipe = pipe;\n\nexport { PIPE_TYPE, createPipe, pipe };\n","export { default as InputMask } from './controls/input.js';\nimport IMask from './core/holder.js';\nexport { default as HTMLContenteditableMaskElement } from './controls/html-contenteditable-mask-element.js';\nexport { default as HTMLInputMaskElement } from './controls/html-input-mask-element.js';\nexport { default as HTMLMaskElement } from './controls/html-mask-element.js';\nexport { default as MaskElement } from './controls/mask-element.js';\nexport { default as ChangeDetails } from './core/change-details.js';\nexport { DIRECTION, forceDirection } from './core/utils.js';\nexport { default as Masked } from './masked/base.js';\nexport { default as MaskedDate } from './masked/date.js';\nexport { default as MaskedDynamic } from './masked/dynamic.js';\nexport { default as MaskedEnum } from './masked/enum.js';\nexport { default as createMask, normalizeOpts } from './masked/factory.js';\nexport { default as MaskedFunction } from './masked/function.js';\nexport { default as MaskedNumber } from './masked/number.js';\nexport { default as MaskedPattern } from './masked/pattern.js';\nexport { default as ChunksTailDetails } from './masked/pattern/chunk-tail-details.js';\nexport { default as PatternFixedDefinition } from './masked/pattern/fixed-definition.js';\nexport { default as PatternInputDefinition } from './masked/pattern/input-definition.js';\nexport { PIPE_TYPE, createPipe, pipe } from './masked/pipe.js';\nexport { default as MaskedRange } from './masked/range.js';\nexport { default as MaskedRegExp } from './masked/regexp.js';\nimport './core/action-details.js';\nimport './core/continuous-tail-details.js';\nimport './masked/pattern/cursor.js';\n\ntry {\n  globalThis.IMask = IMask;\n} catch {}\n\nexport { IMask as default };\n","export const showNextSlide = (currentSlide, sliderLength, activeClass, slides) => {\n    if ((currentSlide + 1) === sliderLength)\n    {\n        slides[sliderLength - 1].classList.remove(activeClass);\n        slides[0].classList.add(activeClass);\n        currentSlide = 0;\n    }\n    else\n    {\n        slides[currentSlide].classList.remove(activeClass);\n        slides[currentSlide + 1].classList.add(activeClass);\n        currentSlide++;      \n    }\n    return currentSlide;\n}\n\nexport const showPreviousSlide = (currentSlide, sliderLength, activeClass, slides) => {\n    if (currentSlide === 0)\n    {\n        slides[currentSlide].classList.remove(activeClass);\n        slides[sliderLength - 1].classList.add(activeClass);\n        currentSlide = sliderLength - 1;\n    }\n    else\n    {\n        slides[currentSlide].classList.remove(activeClass);\n        slides[currentSlide - 1].classList.add(activeClass);\n        currentSlide--;\n    }\n    return currentSlide;\n}","import burger_menu from './modules/burger_menu';\nimport modal from './modules/modal';\nimport faq from './modules/faq';\nimport subscribe from './modules/subscribe';\nimport inputMasks from './modules/inputMasks';\nimport news from './modules/news';\nimport projects from './modules/projects';\nimport checkboxes from './modules/checkboxes';\n\nimport '../scss/global.scss'\n\nwindow.addEventListener('DOMContentLoaded', function() {\n    burger_menu();\n    modal();\n    faq();\n    subscribe();\n    inputMasks();\n    news();\n    projects();\n    checkboxes();\n}); ","function checkboxes(){\n    // изменение состояния чекбоксов\n    const checkboxes = document.querySelectorAll('.checkbox');\n    checkboxes.forEach((elem, i) => {\n        const checkboxLabel = elem.querySelector('label');\n        checkboxLabel.addEventListener('click', () => {\n            const checkboxInput = checkboxes[i].querySelector('input');\n            checkboxInput.checked = !checkboxInput.checked;\n        });\n    });\n}\n\nexport default checkboxes;","import {showNextSlide, showPreviousSlide} from './slider';\n\nfunction projects(){\n    const slides = document.querySelectorAll('.slide_projects');\n    const sliderLength = slides.length;\n    const activeClass = 'slide_active';\n    const nextArrow = document.querySelector('.slider__arrow-next_projects');\n    const previousArrow = document.querySelector('.slider__arrow-previous_projects');\n    let currentSlide = 0;\n\n\n    nextArrow.addEventListener('click', () => {\n        currentSlide = showNextSlide(currentSlide, sliderLength, activeClass, slides);\n    });\n\n    previousArrow.addEventListener('click', () => {\n        currentSlide = showPreviousSlide(currentSlide, sliderLength, activeClass, slides);\n    });\n}\n\nexport default projects;","function burger_menu(){\n    const burger = document.querySelector('.burger');\n    const menu = document.querySelector('.header__menu');\n    const navItems = document.querySelectorAll('.header__nav-item_paragraph');\n\n    // закрытие меню на мобильном устройстве\n    const closeMobileMenu = () => {\n        burger.classList.remove(\"burger_active\");\n        menu.classList.remove(\"header__menu_active\");\n        document.body.style.overflow = 'auto';\n    }\n\n    // открытие меню на мобильном устройстве\n    const openMobileMenu = () => {\n        burger.classList.add(\"burger_active\");\n        menu.classList.add(\"header__menu_active\");\n        document.body.style.overflow = 'hidden';\n    }\n\n    burger.addEventListener('click', () => {\n        if (menu.classList.contains(\"header__menu_active\"))\n        {\n            closeMobileMenu();\n        } else {\n            openMobileMenu();\n        };\n    }); \n\n    // вывод пунктов менб при наведении на навигационную ссылку содержащую подпункты\n    navItems.forEach((elem) => {\n        elem.addEventListener('mouseover', () => {\n            elem.querySelector('.header__links').classList.add(\"header__links_active\");\n        });\n        elem.addEventListener('mouseout', () => {\n            elem.querySelector('.header__links').classList.remove(\"header__links_active\");\n        });\n    });\n\n    // закрытие меню при клике на ссылку навигации\n    const links = document.querySelector('.header__nav').querySelectorAll('a');\n    links.forEach((elem) => {\n        elem.addEventListener('click', () => {\n            if (menu.classList.contains(\"header__menu_active\"))\n            {\n                closeMobileMenu();\n            }\n        });\n    });\n}\n\nexport default burger_menu;","import IMask from 'imask';\n\nfunction inputMasks(){\n    document.querySelectorAll('.input_phone').forEach((e) => {\n        const phoneMask = IMask( e, { mask: '+{7}(000)000-00-00' })\n    }) \n\n    const timeMask = IMask(document.querySelector('.input_time'), {\n        mask: 'HH:MM',\n        blocks: {\n            HH: {\n            mask: IMask.MaskedRange,\n            from: 0,\n            to: 23,\n            maxLength: 2\n            },\n            MM: {\n            mask: IMask.MaskedRange,\n            from: 0,\n            to: 59,\n            maxLength: 2\n            }\n        }\n    });\n\n    const dateMask = IMask(document.querySelector('.input_date'), {\n        mask: Date,\n        pattern: 'DD.MM.YYYY',\n        blocks: {\n            DD: {\n                mask: IMask.MaskedRange,\n                from: 1,\n                to: 31,\n                maxLength: 2,\n            },\n            MM: {\n                mask: IMask.MaskedRange,\n                from: 1,\n                to: 12,\n                maxLength: 2,\n            },\n            YYYY: {\n                mask: IMask.MaskedRange,\n                from: 1900,\n                to: 9999,\n            },\n        },\n    });\n}\n\nexport default inputMasks;","import {showNextSlide, showPreviousSlide} from './slider';\n\nfunction news(){\n    const slides = document.querySelectorAll('.slide_news');\n    const sliderLength = slides.length;\n    const activeClass = 'slide_active';\n    const nextArrow = document.querySelector('.slider__arrow-next_news');\n    const previousArrow = document.querySelector('.slider__arrow-previous_news');\n    let currentSlide = 0;\n\n    // условие проверки размера экрана\n    function isMobile() {\n        return window.innerWidth <= 576;\n    }\n\n    // подключение обработчиков, если экран маленький\n    if (isMobile()) {\n        previousArrow.addEventListener('click', handleClickPreviousArrow);\n        nextArrow.addEventListener('click', handleClickNextArrow);\n    }\n\n    // клик на кнопку влево\n    function handleClickPreviousArrow() {\n        currentSlide = showPreviousSlide(currentSlide, sliderLength, activeClass, slides);\n    }\n\n    // клик на кнопку вправо\n    function handleClickNextArrow() {\n        currentSlide = showNextSlide(currentSlide, sliderLength, activeClass, slides);\n    }\n\n    // обработчик на размер экрана, чтобы добвить или удлать обработчики на стрелки управления слайдером\n    window.addEventListener('resize', function () {\n        if (isMobile()) {\n            // добавление обработчиков событий, если разрешение становится меньше 576 px\n            previousArrow.addEventListener('click', handleClickPreviousArrow);\n            nextArrow.addEventListener('click', handleClickNextArrow);\n        } else {\n            // удаление обработчиков событий, если разрешение становится больше 576 px\n            previousArrow.removeEventListener('click', handleClickPreviousArrow);\n            nextArrow.removeEventListener('click', handleClickNextArrow);\n        }\n    });\n}\n\nexport default news;"],"names":["clearTimeouts","successTimeout","errorTimeout","clearTimeout","showSuccessMessage","message","classList","remove","add","innerHTML","setTimeout","showErrorMessage","accordionHeader","document","querySelectorAll","accordionBody","accordion","forEach","elem","i","addEventListener","index","contains","style","maxHeight","scrollHeight","openAccordion","isString","str","String","isObject","obj","constructor","name","pick","keys","Array","isArray","_","k","includes","Object","entries","reduce","acc","_ref","v","DIRECTION","escapeRegExp","replace","objectIncludes","b","a","arrA","arrB","length","dateA","Date","dateB","getTime","regexpA","RegExp","regexpB","toString","prototype","hasOwnProperty","call","ActionDetails","opts","assign","this","value","slice","startChangePos","oldValue","oldSelection","start","cursorPos","end","Math","min","insertedCount","inserted","substr","removedCount","max","removed","head","substring","tail","removeDirection","IMask","el","InputMask","maskedClass","mask","Error","MaskedRegExp","MaskedPattern","MaskedDate","Number","MaskedNumber","MaskedDynamic","Masked","Function","MaskedFunction","console","warn","normalizeOpts","instanceOpts","_mask","startsWith","createMask","nOpts","MaskedClass","MaskElement","selectionStart","_unsafeSelectionStart","selectionEnd","_unsafeSelectionEnd","select","_unsafeSelect","isActive","HTMLMaskElement","static","selectionChange","input","drop","click","focus","commit","super","_handlers","rootElement","getRootNode","activeElement","bindEvents","handlers","event","_toggleEventHandler","EVENTS_MAP","unbindEvents","handler","removeEventListener","HTMLInputMaskElement","setSelectionRange","HTMLContenteditableMaskElement","root","selection","getSelection","anchorOffset","focusOffset","createRange","range","setStart","firstChild","setEnd","lastChild","removeAllRanges","addRange","textContent","isContentEditable","tagName","masked","_listeners","_value","_unmaskedValue","_saveSelection","bind","_onInput","_onChange","_onDrop","_onFocus","_onClick","alignCursor","alignCursorFriendly","_bindEvents","updateValue","maskEquals","updateOptions","unmaskedValue","updateControl","typedValue","val","typedValueEquals","displayValue","_unbindEvents","_fireEvent","ev","e","listeners","l","_cursorChanging","_changingCursorPos","pos","_selection","newUnmaskedValue","newValue","newDisplayValue","isChanged","_fireChangeEvents","restOpts","updateMask","updateOpts","optionsIsChanged","updateCursor","_delayUpdateCursor","_abortUpdateCursor","_inputEvent","isComplete","nearestInputPos","on","push","off","hIndex","indexOf","splice","details","oldRawValue","rawInputValue","offset","raw","doCommit","preventDefault","stopPropagation","destroy","ChangeDetails","normalize","prep","rawInserted","skip","tailShift","aggregate","ContinuousTailDetails","from","stop","extend","appendTo","append","_appendPlaceholder","state","unshift","beforePos","shiftChar","shift","skipInvalid","undefined","_update","DEFAULTS","_initialized","withValueRefresh","_rawInputValue","reset","resolve","flags","parse","format","extractInput","isFilled","direction","totalInputPositions","fromPos","toPos","extractTail","appendTail","_appendCharRaw","ch","_appendChar","checkTail","consistentState","doPrepareChar","consistentTail","appended","doValidate","beforeTailState","overwrite","tailDetails","_appendEager","_beforeTailState","doPrepare","ci","d","doSkipInvalid","eager","fn","_refreshing","rawInput","ret","runIsolated","_isolated","Boolean","prepare","prepareChar","validate","parent","deleteCount","tailPos","eagerRemove","forceDirection","valLength","tval","EMPTY_VALUES","ChunksTailDetails","chunks","map","join","tailChunk","lastChunk","extendLast","firstTailChunk","blockIndex","chunk","lastBlockIter","_mapPosToBlock","chunkBlock","_stops","phDetails","_blocks","remainChars","c","props","cstate","chunkShiftPos","PatternCursor","_log","ok","block","_blockStartPos","s","pushState","popState","pop","bindBlock","_pushLeft","_pushRight","pushLeftBeforeFilled","isFixed","pushLeftBeforeInput","pushLeftBeforeRequired","isOptional","pushRightBeforeFilled","pushRightBeforeInput","pushRightBeforeRequired","PatternFixedDefinition","isUnmasking","_isRawInput","maxPos","appendEager","isResolved","char","PatternInputDefinition","placeholderChar","displayChar","lazy","maskOpts","currentMaskFlags","boundPos","search","definitions","DEFAULT_DEFINITIONS","_rebuildMask","defs","exposeBlock","_maskedBlocks","pattern","unmaskingBlock","optionalBlock","blocks","p","bNames","filter","bName","sort","expose","blockOpts","maskedBlock","isInput","STOP_CHAR","ESCAPE_CHAR","def","maskedState","bi","every","startBlockIndex","blockIter","blockDetails","chunkTail","_forEachBlocksInRange","bFromPos","bToPos","blockChunk","_findStopBefore","stopBefore","si","toBlockIndex","startBlockIter","endBlockIndex","bDetails","accVal","blockStartPos","fromBlockIter","toBlockIter","isSameBlock","fromBlockStartPos","fromBlockEndPos","removeDetails","cursor","total","maskedBlocks","indices","gi","MaskedRange","_matchFrom","maxLength","to","autofix","patternOpts","fromStr","padStart","toStr","sameCharsCount","repeat","boundaries","minstr","maxstr","placeholder","num","match","padEnd","nextVal","m","Y","date","getDate","getMonth","getFullYear","day","month","year","split","extractPatternOptions","patternBlocks","GET_DEFAULT_BLOCKS","bk","isDateExist","currentMask","exposeMask","compiledMasks","_overwrite","_eager","_skipInvalid","_applyDispatch","prevValueBeforeTail","inputValue","insertValue","tailValue","prevMask","prevMaskState","doDispatch","currentMaskRef","dispatch","currentDetails","mi","oldMask","inputs","isCurrent","startInputPos","weight","i1","i2","MaskedEnum","enum","_enum","eopts","lengths","requiredLength","optionalLength","some","radix","thousandsSeparator","mapToRadix","UNMASKED_RADIX","MIN_SAFE_INTEGER","MAX_SAFE_INTEGER","scale","normalizeZeros","padFractionalZeros","n","toLocaleString","useGrouping","maximumFractionDigits","_updateRegExps","allowNegative","_numberRegExp","_mapToRadixRegExp","_thousandsSeparatorRegExp","_removeThousandsSeparators","_insertThousandsSeparators","parts","prepCh","allowPositive","_separatorsCount","extendOnSeparators","count","_separatorsCountFromSlice","_adjustRangeWithSeparators","prevBeforeTailValue","prevBeforeTailSeparatorsCount","appendDetails","beforeTailValue","beforeTailSeparatorsCount","_findSeparatorAround","searchFrom","separatorPos","separatorAroundFromPos","separatorAroundToPos","valueBeforePos","valueAfterPos","separatorAtLeftPos","separatorAtLeftEndPos","separatorAtRightPos","valid","number","isNaN","validnum","formatted","_normalizeZeros","_padFractionalZeros","sign","zeros","test","dropFractional","PIPE_TYPE","MASKED","UNMASKED","TYPED","createPipe","arg","pipe","globalThis","showNextSlide","currentSlide","sliderLength","activeClass","slides","showPreviousSlide","window","checkboxes","nextArrow","previousArrow","form","burger","menu","navItems","closeMobileMenu","querySelector","body","overflow","closeModal","modal","openBtn","code","target","phoneInputValue","timeouts","faq","dateInputValue","timeInputValue","HH","MM","DD","YYYY","isMobile","innerWidth","handleClickPreviousArrow","handleClickNextArrow","news","checkboxInput","checked"],"sourceRoot":""}